// Code generated by go-swagger; DO NOT EDIT.

package my_timesheets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewMyTimesheetsListParams creates a new MyTimesheetsListParams object
// with the default values initialized.
func NewMyTimesheetsListParams() *MyTimesheetsListParams {
	var ()
	return &MyTimesheetsListParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewMyTimesheetsListParamsWithTimeout creates a new MyTimesheetsListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewMyTimesheetsListParamsWithTimeout(timeout time.Duration) *MyTimesheetsListParams {
	var ()
	return &MyTimesheetsListParams{

		timeout: timeout,
	}
}

// NewMyTimesheetsListParamsWithContext creates a new MyTimesheetsListParams object
// with the default values initialized, and the ability to set a context for a request
func NewMyTimesheetsListParamsWithContext(ctx context.Context) *MyTimesheetsListParams {
	var ()
	return &MyTimesheetsListParams{

		Context: ctx,
	}
}

// NewMyTimesheetsListParamsWithHTTPClient creates a new MyTimesheetsListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewMyTimesheetsListParamsWithHTTPClient(client *http.Client) *MyTimesheetsListParams {
	var ()
	return &MyTimesheetsListParams{
		HTTPClient: client,
	}
}

/*MyTimesheetsListParams contains all the parameters to send to the API endpoint
for the my timesheets list operation typically these are written to a http.Request
*/
type MyTimesheetsListParams struct {

	/*Month*/
	Month *string
	/*MonthGt*/
	MonthGt *string
	/*MonthGte*/
	MonthGte *string
	/*MonthLt*/
	MonthLt *string
	/*MonthLte*/
	MonthLte *string
	/*OrderBy*/
	OrderBy *string
	/*Page*/
	Page *string
	/*PageSize*/
	PageSize *string
	/*Status*/
	Status *string
	/*Year*/
	Year *string
	/*YearGt*/
	YearGt *string
	/*YearGte*/
	YearGte *string
	/*YearLt*/
	YearLt *string
	/*YearLte*/
	YearLte *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the my timesheets list params
func (o *MyTimesheetsListParams) WithTimeout(timeout time.Duration) *MyTimesheetsListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the my timesheets list params
func (o *MyTimesheetsListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the my timesheets list params
func (o *MyTimesheetsListParams) WithContext(ctx context.Context) *MyTimesheetsListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the my timesheets list params
func (o *MyTimesheetsListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the my timesheets list params
func (o *MyTimesheetsListParams) WithHTTPClient(client *http.Client) *MyTimesheetsListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the my timesheets list params
func (o *MyTimesheetsListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMonth adds the month to the my timesheets list params
func (o *MyTimesheetsListParams) WithMonth(month *string) *MyTimesheetsListParams {
	o.SetMonth(month)
	return o
}

// SetMonth adds the month to the my timesheets list params
func (o *MyTimesheetsListParams) SetMonth(month *string) {
	o.Month = month
}

// WithMonthGt adds the monthGt to the my timesheets list params
func (o *MyTimesheetsListParams) WithMonthGt(monthGt *string) *MyTimesheetsListParams {
	o.SetMonthGt(monthGt)
	return o
}

// SetMonthGt adds the monthGt to the my timesheets list params
func (o *MyTimesheetsListParams) SetMonthGt(monthGt *string) {
	o.MonthGt = monthGt
}

// WithMonthGte adds the monthGte to the my timesheets list params
func (o *MyTimesheetsListParams) WithMonthGte(monthGte *string) *MyTimesheetsListParams {
	o.SetMonthGte(monthGte)
	return o
}

// SetMonthGte adds the monthGte to the my timesheets list params
func (o *MyTimesheetsListParams) SetMonthGte(monthGte *string) {
	o.MonthGte = monthGte
}

// WithMonthLt adds the monthLt to the my timesheets list params
func (o *MyTimesheetsListParams) WithMonthLt(monthLt *string) *MyTimesheetsListParams {
	o.SetMonthLt(monthLt)
	return o
}

// SetMonthLt adds the monthLt to the my timesheets list params
func (o *MyTimesheetsListParams) SetMonthLt(monthLt *string) {
	o.MonthLt = monthLt
}

// WithMonthLte adds the monthLte to the my timesheets list params
func (o *MyTimesheetsListParams) WithMonthLte(monthLte *string) *MyTimesheetsListParams {
	o.SetMonthLte(monthLte)
	return o
}

// SetMonthLte adds the monthLte to the my timesheets list params
func (o *MyTimesheetsListParams) SetMonthLte(monthLte *string) {
	o.MonthLte = monthLte
}

// WithOrderBy adds the orderBy to the my timesheets list params
func (o *MyTimesheetsListParams) WithOrderBy(orderBy *string) *MyTimesheetsListParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the my timesheets list params
func (o *MyTimesheetsListParams) SetOrderBy(orderBy *string) {
	o.OrderBy = orderBy
}

// WithPage adds the page to the my timesheets list params
func (o *MyTimesheetsListParams) WithPage(page *string) *MyTimesheetsListParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the my timesheets list params
func (o *MyTimesheetsListParams) SetPage(page *string) {
	o.Page = page
}

// WithPageSize adds the pageSize to the my timesheets list params
func (o *MyTimesheetsListParams) WithPageSize(pageSize *string) *MyTimesheetsListParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the my timesheets list params
func (o *MyTimesheetsListParams) SetPageSize(pageSize *string) {
	o.PageSize = pageSize
}

// WithStatus adds the status to the my timesheets list params
func (o *MyTimesheetsListParams) WithStatus(status *string) *MyTimesheetsListParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the my timesheets list params
func (o *MyTimesheetsListParams) SetStatus(status *string) {
	o.Status = status
}

// WithYear adds the year to the my timesheets list params
func (o *MyTimesheetsListParams) WithYear(year *string) *MyTimesheetsListParams {
	o.SetYear(year)
	return o
}

// SetYear adds the year to the my timesheets list params
func (o *MyTimesheetsListParams) SetYear(year *string) {
	o.Year = year
}

// WithYearGt adds the yearGt to the my timesheets list params
func (o *MyTimesheetsListParams) WithYearGt(yearGt *string) *MyTimesheetsListParams {
	o.SetYearGt(yearGt)
	return o
}

// SetYearGt adds the yearGt to the my timesheets list params
func (o *MyTimesheetsListParams) SetYearGt(yearGt *string) {
	o.YearGt = yearGt
}

// WithYearGte adds the yearGte to the my timesheets list params
func (o *MyTimesheetsListParams) WithYearGte(yearGte *string) *MyTimesheetsListParams {
	o.SetYearGte(yearGte)
	return o
}

// SetYearGte adds the yearGte to the my timesheets list params
func (o *MyTimesheetsListParams) SetYearGte(yearGte *string) {
	o.YearGte = yearGte
}

// WithYearLt adds the yearLt to the my timesheets list params
func (o *MyTimesheetsListParams) WithYearLt(yearLt *string) *MyTimesheetsListParams {
	o.SetYearLt(yearLt)
	return o
}

// SetYearLt adds the yearLt to the my timesheets list params
func (o *MyTimesheetsListParams) SetYearLt(yearLt *string) {
	o.YearLt = yearLt
}

// WithYearLte adds the yearLte to the my timesheets list params
func (o *MyTimesheetsListParams) WithYearLte(yearLte *string) *MyTimesheetsListParams {
	o.SetYearLte(yearLte)
	return o
}

// SetYearLte adds the yearLte to the my timesheets list params
func (o *MyTimesheetsListParams) SetYearLte(yearLte *string) {
	o.YearLte = yearLte
}

// WriteToRequest writes these params to a swagger request
func (o *MyTimesheetsListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Month != nil {

		// query param month
		var qrMonth string
		if o.Month != nil {
			qrMonth = *o.Month
		}
		qMonth := qrMonth
		if qMonth != "" {
			if err := r.SetQueryParam("month", qMonth); err != nil {
				return err
			}
		}

	}

	if o.MonthGt != nil {

		// query param month__gt
		var qrMonthGt string
		if o.MonthGt != nil {
			qrMonthGt = *o.MonthGt
		}
		qMonthGt := qrMonthGt
		if qMonthGt != "" {
			if err := r.SetQueryParam("month__gt", qMonthGt); err != nil {
				return err
			}
		}

	}

	if o.MonthGte != nil {

		// query param month__gte
		var qrMonthGte string
		if o.MonthGte != nil {
			qrMonthGte = *o.MonthGte
		}
		qMonthGte := qrMonthGte
		if qMonthGte != "" {
			if err := r.SetQueryParam("month__gte", qMonthGte); err != nil {
				return err
			}
		}

	}

	if o.MonthLt != nil {

		// query param month__lt
		var qrMonthLt string
		if o.MonthLt != nil {
			qrMonthLt = *o.MonthLt
		}
		qMonthLt := qrMonthLt
		if qMonthLt != "" {
			if err := r.SetQueryParam("month__lt", qMonthLt); err != nil {
				return err
			}
		}

	}

	if o.MonthLte != nil {

		// query param month__lte
		var qrMonthLte string
		if o.MonthLte != nil {
			qrMonthLte = *o.MonthLte
		}
		qMonthLte := qrMonthLte
		if qMonthLte != "" {
			if err := r.SetQueryParam("month__lte", qMonthLte); err != nil {
				return err
			}
		}

	}

	if o.OrderBy != nil {

		// query param order_by
		var qrOrderBy string
		if o.OrderBy != nil {
			qrOrderBy = *o.OrderBy
		}
		qOrderBy := qrOrderBy
		if qOrderBy != "" {
			if err := r.SetQueryParam("order_by", qOrderBy); err != nil {
				return err
			}
		}

	}

	if o.Page != nil {

		// query param page
		var qrPage string
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := qrPage
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if o.PageSize != nil {

		// query param page_size
		var qrPageSize string
		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := qrPageSize
		if qPageSize != "" {
			if err := r.SetQueryParam("page_size", qPageSize); err != nil {
				return err
			}
		}

	}

	if o.Status != nil {

		// query param status
		var qrStatus string
		if o.Status != nil {
			qrStatus = *o.Status
		}
		qStatus := qrStatus
		if qStatus != "" {
			if err := r.SetQueryParam("status", qStatus); err != nil {
				return err
			}
		}

	}

	if o.Year != nil {

		// query param year
		var qrYear string
		if o.Year != nil {
			qrYear = *o.Year
		}
		qYear := qrYear
		if qYear != "" {
			if err := r.SetQueryParam("year", qYear); err != nil {
				return err
			}
		}

	}

	if o.YearGt != nil {

		// query param year__gt
		var qrYearGt string
		if o.YearGt != nil {
			qrYearGt = *o.YearGt
		}
		qYearGt := qrYearGt
		if qYearGt != "" {
			if err := r.SetQueryParam("year__gt", qYearGt); err != nil {
				return err
			}
		}

	}

	if o.YearGte != nil {

		// query param year__gte
		var qrYearGte string
		if o.YearGte != nil {
			qrYearGte = *o.YearGte
		}
		qYearGte := qrYearGte
		if qYearGte != "" {
			if err := r.SetQueryParam("year__gte", qYearGte); err != nil {
				return err
			}
		}

	}

	if o.YearLt != nil {

		// query param year__lt
		var qrYearLt string
		if o.YearLt != nil {
			qrYearLt = *o.YearLt
		}
		qYearLt := qrYearLt
		if qYearLt != "" {
			if err := r.SetQueryParam("year__lt", qYearLt); err != nil {
				return err
			}
		}

	}

	if o.YearLte != nil {

		// query param year__lte
		var qrYearLte string
		if o.YearLte != nil {
			qrYearLte = *o.YearLte
		}
		qYearLte := qrYearLte
		if qYearLte != "" {
			if err := r.SetQueryParam("year__lte", qYearLte); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package user_relatives

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewUserRelativesListParams creates a new UserRelativesListParams object
// with the default values initialized.
func NewUserRelativesListParams() *UserRelativesListParams {
	var ()
	return &UserRelativesListParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUserRelativesListParamsWithTimeout creates a new UserRelativesListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUserRelativesListParamsWithTimeout(timeout time.Duration) *UserRelativesListParams {
	var ()
	return &UserRelativesListParams{

		timeout: timeout,
	}
}

// NewUserRelativesListParamsWithContext creates a new UserRelativesListParams object
// with the default values initialized, and the ability to set a context for a request
func NewUserRelativesListParamsWithContext(ctx context.Context) *UserRelativesListParams {
	var ()
	return &UserRelativesListParams{

		Context: ctx,
	}
}

// NewUserRelativesListParamsWithHTTPClient creates a new UserRelativesListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUserRelativesListParamsWithHTTPClient(client *http.Client) *UserRelativesListParams {
	var ()
	return &UserRelativesListParams{
		HTTPClient: client,
	}
}

/*UserRelativesListParams contains all the parameters to send to the API endpoint
for the user relatives list operation typically these are written to a http.Request
*/
type UserRelativesListParams struct {

	/*BirthDate*/
	BirthDate *string
	/*BirthDateGt*/
	BirthDateGt *string
	/*BirthDateGte*/
	BirthDateGte *string
	/*BirthDateLt*/
	BirthDateLt *string
	/*BirthDateLte*/
	BirthDateLte *string
	/*Gender*/
	Gender *string
	/*Name*/
	Name *string
	/*NameContains*/
	NameContains *string
	/*NameIcontains*/
	NameIcontains *string
	/*OrderBy*/
	OrderBy *string
	/*Page*/
	Page *string
	/*PageSize*/
	PageSize *string
	/*Relation*/
	Relation *string
	/*RelationContains*/
	RelationContains *string
	/*RelationIcontains*/
	RelationIcontains *string
	/*UserFirstName*/
	UserFirstName *string
	/*UserFirstNameContains*/
	UserFirstNameContains *string
	/*UserFirstNameIcontains*/
	UserFirstNameIcontains *string
	/*UserLastName*/
	UserLastName *string
	/*UserLastNameContains*/
	UserLastNameContains *string
	/*UserLastNameIcontains*/
	UserLastNameIcontains *string
	/*UserUsername*/
	UserUsername *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the user relatives list params
func (o *UserRelativesListParams) WithTimeout(timeout time.Duration) *UserRelativesListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the user relatives list params
func (o *UserRelativesListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the user relatives list params
func (o *UserRelativesListParams) WithContext(ctx context.Context) *UserRelativesListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the user relatives list params
func (o *UserRelativesListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the user relatives list params
func (o *UserRelativesListParams) WithHTTPClient(client *http.Client) *UserRelativesListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the user relatives list params
func (o *UserRelativesListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBirthDate adds the birthDate to the user relatives list params
func (o *UserRelativesListParams) WithBirthDate(birthDate *string) *UserRelativesListParams {
	o.SetBirthDate(birthDate)
	return o
}

// SetBirthDate adds the birthDate to the user relatives list params
func (o *UserRelativesListParams) SetBirthDate(birthDate *string) {
	o.BirthDate = birthDate
}

// WithBirthDateGt adds the birthDateGt to the user relatives list params
func (o *UserRelativesListParams) WithBirthDateGt(birthDateGt *string) *UserRelativesListParams {
	o.SetBirthDateGt(birthDateGt)
	return o
}

// SetBirthDateGt adds the birthDateGt to the user relatives list params
func (o *UserRelativesListParams) SetBirthDateGt(birthDateGt *string) {
	o.BirthDateGt = birthDateGt
}

// WithBirthDateGte adds the birthDateGte to the user relatives list params
func (o *UserRelativesListParams) WithBirthDateGte(birthDateGte *string) *UserRelativesListParams {
	o.SetBirthDateGte(birthDateGte)
	return o
}

// SetBirthDateGte adds the birthDateGte to the user relatives list params
func (o *UserRelativesListParams) SetBirthDateGte(birthDateGte *string) {
	o.BirthDateGte = birthDateGte
}

// WithBirthDateLt adds the birthDateLt to the user relatives list params
func (o *UserRelativesListParams) WithBirthDateLt(birthDateLt *string) *UserRelativesListParams {
	o.SetBirthDateLt(birthDateLt)
	return o
}

// SetBirthDateLt adds the birthDateLt to the user relatives list params
func (o *UserRelativesListParams) SetBirthDateLt(birthDateLt *string) {
	o.BirthDateLt = birthDateLt
}

// WithBirthDateLte adds the birthDateLte to the user relatives list params
func (o *UserRelativesListParams) WithBirthDateLte(birthDateLte *string) *UserRelativesListParams {
	o.SetBirthDateLte(birthDateLte)
	return o
}

// SetBirthDateLte adds the birthDateLte to the user relatives list params
func (o *UserRelativesListParams) SetBirthDateLte(birthDateLte *string) {
	o.BirthDateLte = birthDateLte
}

// WithGender adds the gender to the user relatives list params
func (o *UserRelativesListParams) WithGender(gender *string) *UserRelativesListParams {
	o.SetGender(gender)
	return o
}

// SetGender adds the gender to the user relatives list params
func (o *UserRelativesListParams) SetGender(gender *string) {
	o.Gender = gender
}

// WithName adds the name to the user relatives list params
func (o *UserRelativesListParams) WithName(name *string) *UserRelativesListParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the user relatives list params
func (o *UserRelativesListParams) SetName(name *string) {
	o.Name = name
}

// WithNameContains adds the nameContains to the user relatives list params
func (o *UserRelativesListParams) WithNameContains(nameContains *string) *UserRelativesListParams {
	o.SetNameContains(nameContains)
	return o
}

// SetNameContains adds the nameContains to the user relatives list params
func (o *UserRelativesListParams) SetNameContains(nameContains *string) {
	o.NameContains = nameContains
}

// WithNameIcontains adds the nameIcontains to the user relatives list params
func (o *UserRelativesListParams) WithNameIcontains(nameIcontains *string) *UserRelativesListParams {
	o.SetNameIcontains(nameIcontains)
	return o
}

// SetNameIcontains adds the nameIcontains to the user relatives list params
func (o *UserRelativesListParams) SetNameIcontains(nameIcontains *string) {
	o.NameIcontains = nameIcontains
}

// WithOrderBy adds the orderBy to the user relatives list params
func (o *UserRelativesListParams) WithOrderBy(orderBy *string) *UserRelativesListParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the user relatives list params
func (o *UserRelativesListParams) SetOrderBy(orderBy *string) {
	o.OrderBy = orderBy
}

// WithPage adds the page to the user relatives list params
func (o *UserRelativesListParams) WithPage(page *string) *UserRelativesListParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the user relatives list params
func (o *UserRelativesListParams) SetPage(page *string) {
	o.Page = page
}

// WithPageSize adds the pageSize to the user relatives list params
func (o *UserRelativesListParams) WithPageSize(pageSize *string) *UserRelativesListParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the user relatives list params
func (o *UserRelativesListParams) SetPageSize(pageSize *string) {
	o.PageSize = pageSize
}

// WithRelation adds the relation to the user relatives list params
func (o *UserRelativesListParams) WithRelation(relation *string) *UserRelativesListParams {
	o.SetRelation(relation)
	return o
}

// SetRelation adds the relation to the user relatives list params
func (o *UserRelativesListParams) SetRelation(relation *string) {
	o.Relation = relation
}

// WithRelationContains adds the relationContains to the user relatives list params
func (o *UserRelativesListParams) WithRelationContains(relationContains *string) *UserRelativesListParams {
	o.SetRelationContains(relationContains)
	return o
}

// SetRelationContains adds the relationContains to the user relatives list params
func (o *UserRelativesListParams) SetRelationContains(relationContains *string) {
	o.RelationContains = relationContains
}

// WithRelationIcontains adds the relationIcontains to the user relatives list params
func (o *UserRelativesListParams) WithRelationIcontains(relationIcontains *string) *UserRelativesListParams {
	o.SetRelationIcontains(relationIcontains)
	return o
}

// SetRelationIcontains adds the relationIcontains to the user relatives list params
func (o *UserRelativesListParams) SetRelationIcontains(relationIcontains *string) {
	o.RelationIcontains = relationIcontains
}

// WithUserFirstName adds the userFirstName to the user relatives list params
func (o *UserRelativesListParams) WithUserFirstName(userFirstName *string) *UserRelativesListParams {
	o.SetUserFirstName(userFirstName)
	return o
}

// SetUserFirstName adds the userFirstName to the user relatives list params
func (o *UserRelativesListParams) SetUserFirstName(userFirstName *string) {
	o.UserFirstName = userFirstName
}

// WithUserFirstNameContains adds the userFirstNameContains to the user relatives list params
func (o *UserRelativesListParams) WithUserFirstNameContains(userFirstNameContains *string) *UserRelativesListParams {
	o.SetUserFirstNameContains(userFirstNameContains)
	return o
}

// SetUserFirstNameContains adds the userFirstNameContains to the user relatives list params
func (o *UserRelativesListParams) SetUserFirstNameContains(userFirstNameContains *string) {
	o.UserFirstNameContains = userFirstNameContains
}

// WithUserFirstNameIcontains adds the userFirstNameIcontains to the user relatives list params
func (o *UserRelativesListParams) WithUserFirstNameIcontains(userFirstNameIcontains *string) *UserRelativesListParams {
	o.SetUserFirstNameIcontains(userFirstNameIcontains)
	return o
}

// SetUserFirstNameIcontains adds the userFirstNameIcontains to the user relatives list params
func (o *UserRelativesListParams) SetUserFirstNameIcontains(userFirstNameIcontains *string) {
	o.UserFirstNameIcontains = userFirstNameIcontains
}

// WithUserLastName adds the userLastName to the user relatives list params
func (o *UserRelativesListParams) WithUserLastName(userLastName *string) *UserRelativesListParams {
	o.SetUserLastName(userLastName)
	return o
}

// SetUserLastName adds the userLastName to the user relatives list params
func (o *UserRelativesListParams) SetUserLastName(userLastName *string) {
	o.UserLastName = userLastName
}

// WithUserLastNameContains adds the userLastNameContains to the user relatives list params
func (o *UserRelativesListParams) WithUserLastNameContains(userLastNameContains *string) *UserRelativesListParams {
	o.SetUserLastNameContains(userLastNameContains)
	return o
}

// SetUserLastNameContains adds the userLastNameContains to the user relatives list params
func (o *UserRelativesListParams) SetUserLastNameContains(userLastNameContains *string) {
	o.UserLastNameContains = userLastNameContains
}

// WithUserLastNameIcontains adds the userLastNameIcontains to the user relatives list params
func (o *UserRelativesListParams) WithUserLastNameIcontains(userLastNameIcontains *string) *UserRelativesListParams {
	o.SetUserLastNameIcontains(userLastNameIcontains)
	return o
}

// SetUserLastNameIcontains adds the userLastNameIcontains to the user relatives list params
func (o *UserRelativesListParams) SetUserLastNameIcontains(userLastNameIcontains *string) {
	o.UserLastNameIcontains = userLastNameIcontains
}

// WithUserUsername adds the userUsername to the user relatives list params
func (o *UserRelativesListParams) WithUserUsername(userUsername *string) *UserRelativesListParams {
	o.SetUserUsername(userUsername)
	return o
}

// SetUserUsername adds the userUsername to the user relatives list params
func (o *UserRelativesListParams) SetUserUsername(userUsername *string) {
	o.UserUsername = userUsername
}

// WriteToRequest writes these params to a swagger request
func (o *UserRelativesListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.BirthDate != nil {

		// query param birth_date
		var qrBirthDate string
		if o.BirthDate != nil {
			qrBirthDate = *o.BirthDate
		}
		qBirthDate := qrBirthDate
		if qBirthDate != "" {
			if err := r.SetQueryParam("birth_date", qBirthDate); err != nil {
				return err
			}
		}

	}

	if o.BirthDateGt != nil {

		// query param birth_date__gt
		var qrBirthDateGt string
		if o.BirthDateGt != nil {
			qrBirthDateGt = *o.BirthDateGt
		}
		qBirthDateGt := qrBirthDateGt
		if qBirthDateGt != "" {
			if err := r.SetQueryParam("birth_date__gt", qBirthDateGt); err != nil {
				return err
			}
		}

	}

	if o.BirthDateGte != nil {

		// query param birth_date__gte
		var qrBirthDateGte string
		if o.BirthDateGte != nil {
			qrBirthDateGte = *o.BirthDateGte
		}
		qBirthDateGte := qrBirthDateGte
		if qBirthDateGte != "" {
			if err := r.SetQueryParam("birth_date__gte", qBirthDateGte); err != nil {
				return err
			}
		}

	}

	if o.BirthDateLt != nil {

		// query param birth_date__lt
		var qrBirthDateLt string
		if o.BirthDateLt != nil {
			qrBirthDateLt = *o.BirthDateLt
		}
		qBirthDateLt := qrBirthDateLt
		if qBirthDateLt != "" {
			if err := r.SetQueryParam("birth_date__lt", qBirthDateLt); err != nil {
				return err
			}
		}

	}

	if o.BirthDateLte != nil {

		// query param birth_date__lte
		var qrBirthDateLte string
		if o.BirthDateLte != nil {
			qrBirthDateLte = *o.BirthDateLte
		}
		qBirthDateLte := qrBirthDateLte
		if qBirthDateLte != "" {
			if err := r.SetQueryParam("birth_date__lte", qBirthDateLte); err != nil {
				return err
			}
		}

	}

	if o.Gender != nil {

		// query param gender
		var qrGender string
		if o.Gender != nil {
			qrGender = *o.Gender
		}
		qGender := qrGender
		if qGender != "" {
			if err := r.SetQueryParam("gender", qGender); err != nil {
				return err
			}
		}

	}

	if o.Name != nil {

		// query param name
		var qrName string
		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {
			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}

	}

	if o.NameContains != nil {

		// query param name__contains
		var qrNameContains string
		if o.NameContains != nil {
			qrNameContains = *o.NameContains
		}
		qNameContains := qrNameContains
		if qNameContains != "" {
			if err := r.SetQueryParam("name__contains", qNameContains); err != nil {
				return err
			}
		}

	}

	if o.NameIcontains != nil {

		// query param name__icontains
		var qrNameIcontains string
		if o.NameIcontains != nil {
			qrNameIcontains = *o.NameIcontains
		}
		qNameIcontains := qrNameIcontains
		if qNameIcontains != "" {
			if err := r.SetQueryParam("name__icontains", qNameIcontains); err != nil {
				return err
			}
		}

	}

	if o.OrderBy != nil {

		// query param order_by
		var qrOrderBy string
		if o.OrderBy != nil {
			qrOrderBy = *o.OrderBy
		}
		qOrderBy := qrOrderBy
		if qOrderBy != "" {
			if err := r.SetQueryParam("order_by", qOrderBy); err != nil {
				return err
			}
		}

	}

	if o.Page != nil {

		// query param page
		var qrPage string
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := qrPage
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if o.PageSize != nil {

		// query param page_size
		var qrPageSize string
		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := qrPageSize
		if qPageSize != "" {
			if err := r.SetQueryParam("page_size", qPageSize); err != nil {
				return err
			}
		}

	}

	if o.Relation != nil {

		// query param relation
		var qrRelation string
		if o.Relation != nil {
			qrRelation = *o.Relation
		}
		qRelation := qrRelation
		if qRelation != "" {
			if err := r.SetQueryParam("relation", qRelation); err != nil {
				return err
			}
		}

	}

	if o.RelationContains != nil {

		// query param relation__contains
		var qrRelationContains string
		if o.RelationContains != nil {
			qrRelationContains = *o.RelationContains
		}
		qRelationContains := qrRelationContains
		if qRelationContains != "" {
			if err := r.SetQueryParam("relation__contains", qRelationContains); err != nil {
				return err
			}
		}

	}

	if o.RelationIcontains != nil {

		// query param relation__icontains
		var qrRelationIcontains string
		if o.RelationIcontains != nil {
			qrRelationIcontains = *o.RelationIcontains
		}
		qRelationIcontains := qrRelationIcontains
		if qRelationIcontains != "" {
			if err := r.SetQueryParam("relation__icontains", qRelationIcontains); err != nil {
				return err
			}
		}

	}

	if o.UserFirstName != nil {

		// query param user__first_name
		var qrUserFirstName string
		if o.UserFirstName != nil {
			qrUserFirstName = *o.UserFirstName
		}
		qUserFirstName := qrUserFirstName
		if qUserFirstName != "" {
			if err := r.SetQueryParam("user__first_name", qUserFirstName); err != nil {
				return err
			}
		}

	}

	if o.UserFirstNameContains != nil {

		// query param user__first_name__contains
		var qrUserFirstNameContains string
		if o.UserFirstNameContains != nil {
			qrUserFirstNameContains = *o.UserFirstNameContains
		}
		qUserFirstNameContains := qrUserFirstNameContains
		if qUserFirstNameContains != "" {
			if err := r.SetQueryParam("user__first_name__contains", qUserFirstNameContains); err != nil {
				return err
			}
		}

	}

	if o.UserFirstNameIcontains != nil {

		// query param user__first_name__icontains
		var qrUserFirstNameIcontains string
		if o.UserFirstNameIcontains != nil {
			qrUserFirstNameIcontains = *o.UserFirstNameIcontains
		}
		qUserFirstNameIcontains := qrUserFirstNameIcontains
		if qUserFirstNameIcontains != "" {
			if err := r.SetQueryParam("user__first_name__icontains", qUserFirstNameIcontains); err != nil {
				return err
			}
		}

	}

	if o.UserLastName != nil {

		// query param user__last_name
		var qrUserLastName string
		if o.UserLastName != nil {
			qrUserLastName = *o.UserLastName
		}
		qUserLastName := qrUserLastName
		if qUserLastName != "" {
			if err := r.SetQueryParam("user__last_name", qUserLastName); err != nil {
				return err
			}
		}

	}

	if o.UserLastNameContains != nil {

		// query param user__last_name__contains
		var qrUserLastNameContains string
		if o.UserLastNameContains != nil {
			qrUserLastNameContains = *o.UserLastNameContains
		}
		qUserLastNameContains := qrUserLastNameContains
		if qUserLastNameContains != "" {
			if err := r.SetQueryParam("user__last_name__contains", qUserLastNameContains); err != nil {
				return err
			}
		}

	}

	if o.UserLastNameIcontains != nil {

		// query param user__last_name__icontains
		var qrUserLastNameIcontains string
		if o.UserLastNameIcontains != nil {
			qrUserLastNameIcontains = *o.UserLastNameIcontains
		}
		qUserLastNameIcontains := qrUserLastNameIcontains
		if qUserLastNameIcontains != "" {
			if err := r.SetQueryParam("user__last_name__icontains", qUserLastNameIcontains); err != nil {
				return err
			}
		}

	}

	if o.UserUsername != nil {

		// query param user__username
		var qrUserUsername string
		if o.UserUsername != nil {
			qrUserUsername = *o.UserUsername
		}
		qUserUsername := qrUserUsername
		if qUserUsername != "" {
			if err := r.SetQueryParam("user__username", qUserUsername); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

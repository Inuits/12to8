// Code generated by go-swagger; DO NOT EDIT.

package contracts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewContractsProjectListParams creates a new ContractsProjectListParams object
// with the default values initialized.
func NewContractsProjectListParams() *ContractsProjectListParams {
	var ()
	return &ContractsProjectListParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewContractsProjectListParamsWithTimeout creates a new ContractsProjectListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewContractsProjectListParamsWithTimeout(timeout time.Duration) *ContractsProjectListParams {
	var ()
	return &ContractsProjectListParams{

		timeout: timeout,
	}
}

// NewContractsProjectListParamsWithContext creates a new ContractsProjectListParams object
// with the default values initialized, and the ability to set a context for a request
func NewContractsProjectListParamsWithContext(ctx context.Context) *ContractsProjectListParams {
	var ()
	return &ContractsProjectListParams{

		Context: ctx,
	}
}

// NewContractsProjectListParamsWithHTTPClient creates a new ContractsProjectListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewContractsProjectListParamsWithHTTPClient(client *http.Client) *ContractsProjectListParams {
	var ()
	return &ContractsProjectListParams{
		HTTPClient: client,
	}
}

/*ContractsProjectListParams contains all the parameters to send to the API endpoint
for the contracts project list operation typically these are written to a http.Request
*/
type ContractsProjectListParams struct {

	/*Active*/
	Active *string
	/*Company*/
	Company *string
	/*CompanyCountry*/
	CompanyCountry *string
	/*CompanyInternal*/
	CompanyInternal *string
	/*CompanyName*/
	CompanyName *string
	/*CompanyNameContains*/
	CompanyNameContains *string
	/*CompanyNameIcontains*/
	CompanyNameIcontains *string
	/*CompanyVatIdentificationNumber*/
	CompanyVatIdentificationNumber *string
	/*ContractGroupsLabel*/
	ContractGroupsLabel *string
	/*ContractGroupsLabelContains*/
	ContractGroupsLabelContains *string
	/*ContractGroupsLabelIcontains*/
	ContractGroupsLabelIcontains *string
	/*ContractuserUserFirstName*/
	ContractuserUserFirstName *string
	/*ContractuserUserFirstNameContains*/
	ContractuserUserFirstNameContains *string
	/*ContractuserUserFirstNameIcontains*/
	ContractuserUserFirstNameIcontains *string
	/*ContractuserUserGroups*/
	ContractuserUserGroups *string
	/*ContractuserUserGroupsContains*/
	ContractuserUserGroupsContains *string
	/*ContractuserUserGroupsIcontains*/
	ContractuserUserGroupsIcontains *string
	/*ContractuserUserID*/
	ContractuserUserID *string
	/*ContractuserUserLastName*/
	ContractuserUserLastName *string
	/*ContractuserUserLastNameContains*/
	ContractuserUserLastNameContains *string
	/*ContractuserUserLastNameIcontains*/
	ContractuserUserLastNameIcontains *string
	/*ContractuserUserUsername*/
	ContractuserUserUsername *string
	/*ContractuserUserUsernameContains*/
	ContractuserUserUsernameContains *string
	/*ContractuserUserUsernameIcontains*/
	ContractuserUserUsernameIcontains *string
	/*CustomerCountry*/
	CustomerCountry *string
	/*CustomerInternal*/
	CustomerInternal *string
	/*CustomerName*/
	CustomerName *string
	/*CustomerNameContains*/
	CustomerNameContains *string
	/*CustomerNameIcontains*/
	CustomerNameIcontains *string
	/*CustomerVatIdentificationNumber*/
	CustomerVatIdentificationNumber *string
	/*Description*/
	Description *string
	/*DescriptionContains*/
	DescriptionContains *string
	/*DescriptionIcontains*/
	DescriptionIcontains *string
	/*EndsAt*/
	EndsAt *string
	/*EndsAtGt*/
	EndsAtGt *string
	/*EndsAtGte*/
	EndsAtGte *string
	/*EndsAtLt*/
	EndsAtLt *string
	/*EndsAtLte*/
	EndsAtLte *string
	/*FixedFee*/
	FixedFee *string
	/*FixedFeeContains*/
	FixedFeeContains *string
	/*Label*/
	Label *string
	/*LabelContains*/
	LabelContains *string
	/*LabelIcontains*/
	LabelIcontains *string
	/*OrderBy*/
	OrderBy *string
	/*Page*/
	Page *string
	/*PageSize*/
	PageSize *string
	/*PerformanceTypesID*/
	PerformanceTypesID *string
	/*PerformanceTypesLabel*/
	PerformanceTypesLabel *string
	/*PerformanceTypesLabelContains*/
	PerformanceTypesLabelContains *string
	/*PerformanceTypesLabelIcontains*/
	PerformanceTypesLabelIcontains *string
	/*StartsAt*/
	StartsAt *string
	/*StartsAtGt*/
	StartsAtGt *string
	/*StartsAtGte*/
	StartsAtGte *string
	/*StartsAtLt*/
	StartsAtLt *string
	/*StartsAtLte*/
	StartsAtLte *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the contracts project list params
func (o *ContractsProjectListParams) WithTimeout(timeout time.Duration) *ContractsProjectListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the contracts project list params
func (o *ContractsProjectListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the contracts project list params
func (o *ContractsProjectListParams) WithContext(ctx context.Context) *ContractsProjectListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the contracts project list params
func (o *ContractsProjectListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the contracts project list params
func (o *ContractsProjectListParams) WithHTTPClient(client *http.Client) *ContractsProjectListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the contracts project list params
func (o *ContractsProjectListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithActive adds the active to the contracts project list params
func (o *ContractsProjectListParams) WithActive(active *string) *ContractsProjectListParams {
	o.SetActive(active)
	return o
}

// SetActive adds the active to the contracts project list params
func (o *ContractsProjectListParams) SetActive(active *string) {
	o.Active = active
}

// WithCompany adds the company to the contracts project list params
func (o *ContractsProjectListParams) WithCompany(company *string) *ContractsProjectListParams {
	o.SetCompany(company)
	return o
}

// SetCompany adds the company to the contracts project list params
func (o *ContractsProjectListParams) SetCompany(company *string) {
	o.Company = company
}

// WithCompanyCountry adds the companyCountry to the contracts project list params
func (o *ContractsProjectListParams) WithCompanyCountry(companyCountry *string) *ContractsProjectListParams {
	o.SetCompanyCountry(companyCountry)
	return o
}

// SetCompanyCountry adds the companyCountry to the contracts project list params
func (o *ContractsProjectListParams) SetCompanyCountry(companyCountry *string) {
	o.CompanyCountry = companyCountry
}

// WithCompanyInternal adds the companyInternal to the contracts project list params
func (o *ContractsProjectListParams) WithCompanyInternal(companyInternal *string) *ContractsProjectListParams {
	o.SetCompanyInternal(companyInternal)
	return o
}

// SetCompanyInternal adds the companyInternal to the contracts project list params
func (o *ContractsProjectListParams) SetCompanyInternal(companyInternal *string) {
	o.CompanyInternal = companyInternal
}

// WithCompanyName adds the companyName to the contracts project list params
func (o *ContractsProjectListParams) WithCompanyName(companyName *string) *ContractsProjectListParams {
	o.SetCompanyName(companyName)
	return o
}

// SetCompanyName adds the companyName to the contracts project list params
func (o *ContractsProjectListParams) SetCompanyName(companyName *string) {
	o.CompanyName = companyName
}

// WithCompanyNameContains adds the companyNameContains to the contracts project list params
func (o *ContractsProjectListParams) WithCompanyNameContains(companyNameContains *string) *ContractsProjectListParams {
	o.SetCompanyNameContains(companyNameContains)
	return o
}

// SetCompanyNameContains adds the companyNameContains to the contracts project list params
func (o *ContractsProjectListParams) SetCompanyNameContains(companyNameContains *string) {
	o.CompanyNameContains = companyNameContains
}

// WithCompanyNameIcontains adds the companyNameIcontains to the contracts project list params
func (o *ContractsProjectListParams) WithCompanyNameIcontains(companyNameIcontains *string) *ContractsProjectListParams {
	o.SetCompanyNameIcontains(companyNameIcontains)
	return o
}

// SetCompanyNameIcontains adds the companyNameIcontains to the contracts project list params
func (o *ContractsProjectListParams) SetCompanyNameIcontains(companyNameIcontains *string) {
	o.CompanyNameIcontains = companyNameIcontains
}

// WithCompanyVatIdentificationNumber adds the companyVatIdentificationNumber to the contracts project list params
func (o *ContractsProjectListParams) WithCompanyVatIdentificationNumber(companyVatIdentificationNumber *string) *ContractsProjectListParams {
	o.SetCompanyVatIdentificationNumber(companyVatIdentificationNumber)
	return o
}

// SetCompanyVatIdentificationNumber adds the companyVatIdentificationNumber to the contracts project list params
func (o *ContractsProjectListParams) SetCompanyVatIdentificationNumber(companyVatIdentificationNumber *string) {
	o.CompanyVatIdentificationNumber = companyVatIdentificationNumber
}

// WithContractGroupsLabel adds the contractGroupsLabel to the contracts project list params
func (o *ContractsProjectListParams) WithContractGroupsLabel(contractGroupsLabel *string) *ContractsProjectListParams {
	o.SetContractGroupsLabel(contractGroupsLabel)
	return o
}

// SetContractGroupsLabel adds the contractGroupsLabel to the contracts project list params
func (o *ContractsProjectListParams) SetContractGroupsLabel(contractGroupsLabel *string) {
	o.ContractGroupsLabel = contractGroupsLabel
}

// WithContractGroupsLabelContains adds the contractGroupsLabelContains to the contracts project list params
func (o *ContractsProjectListParams) WithContractGroupsLabelContains(contractGroupsLabelContains *string) *ContractsProjectListParams {
	o.SetContractGroupsLabelContains(contractGroupsLabelContains)
	return o
}

// SetContractGroupsLabelContains adds the contractGroupsLabelContains to the contracts project list params
func (o *ContractsProjectListParams) SetContractGroupsLabelContains(contractGroupsLabelContains *string) {
	o.ContractGroupsLabelContains = contractGroupsLabelContains
}

// WithContractGroupsLabelIcontains adds the contractGroupsLabelIcontains to the contracts project list params
func (o *ContractsProjectListParams) WithContractGroupsLabelIcontains(contractGroupsLabelIcontains *string) *ContractsProjectListParams {
	o.SetContractGroupsLabelIcontains(contractGroupsLabelIcontains)
	return o
}

// SetContractGroupsLabelIcontains adds the contractGroupsLabelIcontains to the contracts project list params
func (o *ContractsProjectListParams) SetContractGroupsLabelIcontains(contractGroupsLabelIcontains *string) {
	o.ContractGroupsLabelIcontains = contractGroupsLabelIcontains
}

// WithContractuserUserFirstName adds the contractuserUserFirstName to the contracts project list params
func (o *ContractsProjectListParams) WithContractuserUserFirstName(contractuserUserFirstName *string) *ContractsProjectListParams {
	o.SetContractuserUserFirstName(contractuserUserFirstName)
	return o
}

// SetContractuserUserFirstName adds the contractuserUserFirstName to the contracts project list params
func (o *ContractsProjectListParams) SetContractuserUserFirstName(contractuserUserFirstName *string) {
	o.ContractuserUserFirstName = contractuserUserFirstName
}

// WithContractuserUserFirstNameContains adds the contractuserUserFirstNameContains to the contracts project list params
func (o *ContractsProjectListParams) WithContractuserUserFirstNameContains(contractuserUserFirstNameContains *string) *ContractsProjectListParams {
	o.SetContractuserUserFirstNameContains(contractuserUserFirstNameContains)
	return o
}

// SetContractuserUserFirstNameContains adds the contractuserUserFirstNameContains to the contracts project list params
func (o *ContractsProjectListParams) SetContractuserUserFirstNameContains(contractuserUserFirstNameContains *string) {
	o.ContractuserUserFirstNameContains = contractuserUserFirstNameContains
}

// WithContractuserUserFirstNameIcontains adds the contractuserUserFirstNameIcontains to the contracts project list params
func (o *ContractsProjectListParams) WithContractuserUserFirstNameIcontains(contractuserUserFirstNameIcontains *string) *ContractsProjectListParams {
	o.SetContractuserUserFirstNameIcontains(contractuserUserFirstNameIcontains)
	return o
}

// SetContractuserUserFirstNameIcontains adds the contractuserUserFirstNameIcontains to the contracts project list params
func (o *ContractsProjectListParams) SetContractuserUserFirstNameIcontains(contractuserUserFirstNameIcontains *string) {
	o.ContractuserUserFirstNameIcontains = contractuserUserFirstNameIcontains
}

// WithContractuserUserGroups adds the contractuserUserGroups to the contracts project list params
func (o *ContractsProjectListParams) WithContractuserUserGroups(contractuserUserGroups *string) *ContractsProjectListParams {
	o.SetContractuserUserGroups(contractuserUserGroups)
	return o
}

// SetContractuserUserGroups adds the contractuserUserGroups to the contracts project list params
func (o *ContractsProjectListParams) SetContractuserUserGroups(contractuserUserGroups *string) {
	o.ContractuserUserGroups = contractuserUserGroups
}

// WithContractuserUserGroupsContains adds the contractuserUserGroupsContains to the contracts project list params
func (o *ContractsProjectListParams) WithContractuserUserGroupsContains(contractuserUserGroupsContains *string) *ContractsProjectListParams {
	o.SetContractuserUserGroupsContains(contractuserUserGroupsContains)
	return o
}

// SetContractuserUserGroupsContains adds the contractuserUserGroupsContains to the contracts project list params
func (o *ContractsProjectListParams) SetContractuserUserGroupsContains(contractuserUserGroupsContains *string) {
	o.ContractuserUserGroupsContains = contractuserUserGroupsContains
}

// WithContractuserUserGroupsIcontains adds the contractuserUserGroupsIcontains to the contracts project list params
func (o *ContractsProjectListParams) WithContractuserUserGroupsIcontains(contractuserUserGroupsIcontains *string) *ContractsProjectListParams {
	o.SetContractuserUserGroupsIcontains(contractuserUserGroupsIcontains)
	return o
}

// SetContractuserUserGroupsIcontains adds the contractuserUserGroupsIcontains to the contracts project list params
func (o *ContractsProjectListParams) SetContractuserUserGroupsIcontains(contractuserUserGroupsIcontains *string) {
	o.ContractuserUserGroupsIcontains = contractuserUserGroupsIcontains
}

// WithContractuserUserID adds the contractuserUserID to the contracts project list params
func (o *ContractsProjectListParams) WithContractuserUserID(contractuserUserID *string) *ContractsProjectListParams {
	o.SetContractuserUserID(contractuserUserID)
	return o
}

// SetContractuserUserID adds the contractuserUserId to the contracts project list params
func (o *ContractsProjectListParams) SetContractuserUserID(contractuserUserID *string) {
	o.ContractuserUserID = contractuserUserID
}

// WithContractuserUserLastName adds the contractuserUserLastName to the contracts project list params
func (o *ContractsProjectListParams) WithContractuserUserLastName(contractuserUserLastName *string) *ContractsProjectListParams {
	o.SetContractuserUserLastName(contractuserUserLastName)
	return o
}

// SetContractuserUserLastName adds the contractuserUserLastName to the contracts project list params
func (o *ContractsProjectListParams) SetContractuserUserLastName(contractuserUserLastName *string) {
	o.ContractuserUserLastName = contractuserUserLastName
}

// WithContractuserUserLastNameContains adds the contractuserUserLastNameContains to the contracts project list params
func (o *ContractsProjectListParams) WithContractuserUserLastNameContains(contractuserUserLastNameContains *string) *ContractsProjectListParams {
	o.SetContractuserUserLastNameContains(contractuserUserLastNameContains)
	return o
}

// SetContractuserUserLastNameContains adds the contractuserUserLastNameContains to the contracts project list params
func (o *ContractsProjectListParams) SetContractuserUserLastNameContains(contractuserUserLastNameContains *string) {
	o.ContractuserUserLastNameContains = contractuserUserLastNameContains
}

// WithContractuserUserLastNameIcontains adds the contractuserUserLastNameIcontains to the contracts project list params
func (o *ContractsProjectListParams) WithContractuserUserLastNameIcontains(contractuserUserLastNameIcontains *string) *ContractsProjectListParams {
	o.SetContractuserUserLastNameIcontains(contractuserUserLastNameIcontains)
	return o
}

// SetContractuserUserLastNameIcontains adds the contractuserUserLastNameIcontains to the contracts project list params
func (o *ContractsProjectListParams) SetContractuserUserLastNameIcontains(contractuserUserLastNameIcontains *string) {
	o.ContractuserUserLastNameIcontains = contractuserUserLastNameIcontains
}

// WithContractuserUserUsername adds the contractuserUserUsername to the contracts project list params
func (o *ContractsProjectListParams) WithContractuserUserUsername(contractuserUserUsername *string) *ContractsProjectListParams {
	o.SetContractuserUserUsername(contractuserUserUsername)
	return o
}

// SetContractuserUserUsername adds the contractuserUserUsername to the contracts project list params
func (o *ContractsProjectListParams) SetContractuserUserUsername(contractuserUserUsername *string) {
	o.ContractuserUserUsername = contractuserUserUsername
}

// WithContractuserUserUsernameContains adds the contractuserUserUsernameContains to the contracts project list params
func (o *ContractsProjectListParams) WithContractuserUserUsernameContains(contractuserUserUsernameContains *string) *ContractsProjectListParams {
	o.SetContractuserUserUsernameContains(contractuserUserUsernameContains)
	return o
}

// SetContractuserUserUsernameContains adds the contractuserUserUsernameContains to the contracts project list params
func (o *ContractsProjectListParams) SetContractuserUserUsernameContains(contractuserUserUsernameContains *string) {
	o.ContractuserUserUsernameContains = contractuserUserUsernameContains
}

// WithContractuserUserUsernameIcontains adds the contractuserUserUsernameIcontains to the contracts project list params
func (o *ContractsProjectListParams) WithContractuserUserUsernameIcontains(contractuserUserUsernameIcontains *string) *ContractsProjectListParams {
	o.SetContractuserUserUsernameIcontains(contractuserUserUsernameIcontains)
	return o
}

// SetContractuserUserUsernameIcontains adds the contractuserUserUsernameIcontains to the contracts project list params
func (o *ContractsProjectListParams) SetContractuserUserUsernameIcontains(contractuserUserUsernameIcontains *string) {
	o.ContractuserUserUsernameIcontains = contractuserUserUsernameIcontains
}

// WithCustomerCountry adds the customerCountry to the contracts project list params
func (o *ContractsProjectListParams) WithCustomerCountry(customerCountry *string) *ContractsProjectListParams {
	o.SetCustomerCountry(customerCountry)
	return o
}

// SetCustomerCountry adds the customerCountry to the contracts project list params
func (o *ContractsProjectListParams) SetCustomerCountry(customerCountry *string) {
	o.CustomerCountry = customerCountry
}

// WithCustomerInternal adds the customerInternal to the contracts project list params
func (o *ContractsProjectListParams) WithCustomerInternal(customerInternal *string) *ContractsProjectListParams {
	o.SetCustomerInternal(customerInternal)
	return o
}

// SetCustomerInternal adds the customerInternal to the contracts project list params
func (o *ContractsProjectListParams) SetCustomerInternal(customerInternal *string) {
	o.CustomerInternal = customerInternal
}

// WithCustomerName adds the customerName to the contracts project list params
func (o *ContractsProjectListParams) WithCustomerName(customerName *string) *ContractsProjectListParams {
	o.SetCustomerName(customerName)
	return o
}

// SetCustomerName adds the customerName to the contracts project list params
func (o *ContractsProjectListParams) SetCustomerName(customerName *string) {
	o.CustomerName = customerName
}

// WithCustomerNameContains adds the customerNameContains to the contracts project list params
func (o *ContractsProjectListParams) WithCustomerNameContains(customerNameContains *string) *ContractsProjectListParams {
	o.SetCustomerNameContains(customerNameContains)
	return o
}

// SetCustomerNameContains adds the customerNameContains to the contracts project list params
func (o *ContractsProjectListParams) SetCustomerNameContains(customerNameContains *string) {
	o.CustomerNameContains = customerNameContains
}

// WithCustomerNameIcontains adds the customerNameIcontains to the contracts project list params
func (o *ContractsProjectListParams) WithCustomerNameIcontains(customerNameIcontains *string) *ContractsProjectListParams {
	o.SetCustomerNameIcontains(customerNameIcontains)
	return o
}

// SetCustomerNameIcontains adds the customerNameIcontains to the contracts project list params
func (o *ContractsProjectListParams) SetCustomerNameIcontains(customerNameIcontains *string) {
	o.CustomerNameIcontains = customerNameIcontains
}

// WithCustomerVatIdentificationNumber adds the customerVatIdentificationNumber to the contracts project list params
func (o *ContractsProjectListParams) WithCustomerVatIdentificationNumber(customerVatIdentificationNumber *string) *ContractsProjectListParams {
	o.SetCustomerVatIdentificationNumber(customerVatIdentificationNumber)
	return o
}

// SetCustomerVatIdentificationNumber adds the customerVatIdentificationNumber to the contracts project list params
func (o *ContractsProjectListParams) SetCustomerVatIdentificationNumber(customerVatIdentificationNumber *string) {
	o.CustomerVatIdentificationNumber = customerVatIdentificationNumber
}

// WithDescription adds the description to the contracts project list params
func (o *ContractsProjectListParams) WithDescription(description *string) *ContractsProjectListParams {
	o.SetDescription(description)
	return o
}

// SetDescription adds the description to the contracts project list params
func (o *ContractsProjectListParams) SetDescription(description *string) {
	o.Description = description
}

// WithDescriptionContains adds the descriptionContains to the contracts project list params
func (o *ContractsProjectListParams) WithDescriptionContains(descriptionContains *string) *ContractsProjectListParams {
	o.SetDescriptionContains(descriptionContains)
	return o
}

// SetDescriptionContains adds the descriptionContains to the contracts project list params
func (o *ContractsProjectListParams) SetDescriptionContains(descriptionContains *string) {
	o.DescriptionContains = descriptionContains
}

// WithDescriptionIcontains adds the descriptionIcontains to the contracts project list params
func (o *ContractsProjectListParams) WithDescriptionIcontains(descriptionIcontains *string) *ContractsProjectListParams {
	o.SetDescriptionIcontains(descriptionIcontains)
	return o
}

// SetDescriptionIcontains adds the descriptionIcontains to the contracts project list params
func (o *ContractsProjectListParams) SetDescriptionIcontains(descriptionIcontains *string) {
	o.DescriptionIcontains = descriptionIcontains
}

// WithEndsAt adds the endsAt to the contracts project list params
func (o *ContractsProjectListParams) WithEndsAt(endsAt *string) *ContractsProjectListParams {
	o.SetEndsAt(endsAt)
	return o
}

// SetEndsAt adds the endsAt to the contracts project list params
func (o *ContractsProjectListParams) SetEndsAt(endsAt *string) {
	o.EndsAt = endsAt
}

// WithEndsAtGt adds the endsAtGt to the contracts project list params
func (o *ContractsProjectListParams) WithEndsAtGt(endsAtGt *string) *ContractsProjectListParams {
	o.SetEndsAtGt(endsAtGt)
	return o
}

// SetEndsAtGt adds the endsAtGt to the contracts project list params
func (o *ContractsProjectListParams) SetEndsAtGt(endsAtGt *string) {
	o.EndsAtGt = endsAtGt
}

// WithEndsAtGte adds the endsAtGte to the contracts project list params
func (o *ContractsProjectListParams) WithEndsAtGte(endsAtGte *string) *ContractsProjectListParams {
	o.SetEndsAtGte(endsAtGte)
	return o
}

// SetEndsAtGte adds the endsAtGte to the contracts project list params
func (o *ContractsProjectListParams) SetEndsAtGte(endsAtGte *string) {
	o.EndsAtGte = endsAtGte
}

// WithEndsAtLt adds the endsAtLt to the contracts project list params
func (o *ContractsProjectListParams) WithEndsAtLt(endsAtLt *string) *ContractsProjectListParams {
	o.SetEndsAtLt(endsAtLt)
	return o
}

// SetEndsAtLt adds the endsAtLt to the contracts project list params
func (o *ContractsProjectListParams) SetEndsAtLt(endsAtLt *string) {
	o.EndsAtLt = endsAtLt
}

// WithEndsAtLte adds the endsAtLte to the contracts project list params
func (o *ContractsProjectListParams) WithEndsAtLte(endsAtLte *string) *ContractsProjectListParams {
	o.SetEndsAtLte(endsAtLte)
	return o
}

// SetEndsAtLte adds the endsAtLte to the contracts project list params
func (o *ContractsProjectListParams) SetEndsAtLte(endsAtLte *string) {
	o.EndsAtLte = endsAtLte
}

// WithFixedFee adds the fixedFee to the contracts project list params
func (o *ContractsProjectListParams) WithFixedFee(fixedFee *string) *ContractsProjectListParams {
	o.SetFixedFee(fixedFee)
	return o
}

// SetFixedFee adds the fixedFee to the contracts project list params
func (o *ContractsProjectListParams) SetFixedFee(fixedFee *string) {
	o.FixedFee = fixedFee
}

// WithFixedFeeContains adds the fixedFeeContains to the contracts project list params
func (o *ContractsProjectListParams) WithFixedFeeContains(fixedFeeContains *string) *ContractsProjectListParams {
	o.SetFixedFeeContains(fixedFeeContains)
	return o
}

// SetFixedFeeContains adds the fixedFeeContains to the contracts project list params
func (o *ContractsProjectListParams) SetFixedFeeContains(fixedFeeContains *string) {
	o.FixedFeeContains = fixedFeeContains
}

// WithLabel adds the label to the contracts project list params
func (o *ContractsProjectListParams) WithLabel(label *string) *ContractsProjectListParams {
	o.SetLabel(label)
	return o
}

// SetLabel adds the label to the contracts project list params
func (o *ContractsProjectListParams) SetLabel(label *string) {
	o.Label = label
}

// WithLabelContains adds the labelContains to the contracts project list params
func (o *ContractsProjectListParams) WithLabelContains(labelContains *string) *ContractsProjectListParams {
	o.SetLabelContains(labelContains)
	return o
}

// SetLabelContains adds the labelContains to the contracts project list params
func (o *ContractsProjectListParams) SetLabelContains(labelContains *string) {
	o.LabelContains = labelContains
}

// WithLabelIcontains adds the labelIcontains to the contracts project list params
func (o *ContractsProjectListParams) WithLabelIcontains(labelIcontains *string) *ContractsProjectListParams {
	o.SetLabelIcontains(labelIcontains)
	return o
}

// SetLabelIcontains adds the labelIcontains to the contracts project list params
func (o *ContractsProjectListParams) SetLabelIcontains(labelIcontains *string) {
	o.LabelIcontains = labelIcontains
}

// WithOrderBy adds the orderBy to the contracts project list params
func (o *ContractsProjectListParams) WithOrderBy(orderBy *string) *ContractsProjectListParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the contracts project list params
func (o *ContractsProjectListParams) SetOrderBy(orderBy *string) {
	o.OrderBy = orderBy
}

// WithPage adds the page to the contracts project list params
func (o *ContractsProjectListParams) WithPage(page *string) *ContractsProjectListParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the contracts project list params
func (o *ContractsProjectListParams) SetPage(page *string) {
	o.Page = page
}

// WithPageSize adds the pageSize to the contracts project list params
func (o *ContractsProjectListParams) WithPageSize(pageSize *string) *ContractsProjectListParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the contracts project list params
func (o *ContractsProjectListParams) SetPageSize(pageSize *string) {
	o.PageSize = pageSize
}

// WithPerformanceTypesID adds the performanceTypesID to the contracts project list params
func (o *ContractsProjectListParams) WithPerformanceTypesID(performanceTypesID *string) *ContractsProjectListParams {
	o.SetPerformanceTypesID(performanceTypesID)
	return o
}

// SetPerformanceTypesID adds the performanceTypesId to the contracts project list params
func (o *ContractsProjectListParams) SetPerformanceTypesID(performanceTypesID *string) {
	o.PerformanceTypesID = performanceTypesID
}

// WithPerformanceTypesLabel adds the performanceTypesLabel to the contracts project list params
func (o *ContractsProjectListParams) WithPerformanceTypesLabel(performanceTypesLabel *string) *ContractsProjectListParams {
	o.SetPerformanceTypesLabel(performanceTypesLabel)
	return o
}

// SetPerformanceTypesLabel adds the performanceTypesLabel to the contracts project list params
func (o *ContractsProjectListParams) SetPerformanceTypesLabel(performanceTypesLabel *string) {
	o.PerformanceTypesLabel = performanceTypesLabel
}

// WithPerformanceTypesLabelContains adds the performanceTypesLabelContains to the contracts project list params
func (o *ContractsProjectListParams) WithPerformanceTypesLabelContains(performanceTypesLabelContains *string) *ContractsProjectListParams {
	o.SetPerformanceTypesLabelContains(performanceTypesLabelContains)
	return o
}

// SetPerformanceTypesLabelContains adds the performanceTypesLabelContains to the contracts project list params
func (o *ContractsProjectListParams) SetPerformanceTypesLabelContains(performanceTypesLabelContains *string) {
	o.PerformanceTypesLabelContains = performanceTypesLabelContains
}

// WithPerformanceTypesLabelIcontains adds the performanceTypesLabelIcontains to the contracts project list params
func (o *ContractsProjectListParams) WithPerformanceTypesLabelIcontains(performanceTypesLabelIcontains *string) *ContractsProjectListParams {
	o.SetPerformanceTypesLabelIcontains(performanceTypesLabelIcontains)
	return o
}

// SetPerformanceTypesLabelIcontains adds the performanceTypesLabelIcontains to the contracts project list params
func (o *ContractsProjectListParams) SetPerformanceTypesLabelIcontains(performanceTypesLabelIcontains *string) {
	o.PerformanceTypesLabelIcontains = performanceTypesLabelIcontains
}

// WithStartsAt adds the startsAt to the contracts project list params
func (o *ContractsProjectListParams) WithStartsAt(startsAt *string) *ContractsProjectListParams {
	o.SetStartsAt(startsAt)
	return o
}

// SetStartsAt adds the startsAt to the contracts project list params
func (o *ContractsProjectListParams) SetStartsAt(startsAt *string) {
	o.StartsAt = startsAt
}

// WithStartsAtGt adds the startsAtGt to the contracts project list params
func (o *ContractsProjectListParams) WithStartsAtGt(startsAtGt *string) *ContractsProjectListParams {
	o.SetStartsAtGt(startsAtGt)
	return o
}

// SetStartsAtGt adds the startsAtGt to the contracts project list params
func (o *ContractsProjectListParams) SetStartsAtGt(startsAtGt *string) {
	o.StartsAtGt = startsAtGt
}

// WithStartsAtGte adds the startsAtGte to the contracts project list params
func (o *ContractsProjectListParams) WithStartsAtGte(startsAtGte *string) *ContractsProjectListParams {
	o.SetStartsAtGte(startsAtGte)
	return o
}

// SetStartsAtGte adds the startsAtGte to the contracts project list params
func (o *ContractsProjectListParams) SetStartsAtGte(startsAtGte *string) {
	o.StartsAtGte = startsAtGte
}

// WithStartsAtLt adds the startsAtLt to the contracts project list params
func (o *ContractsProjectListParams) WithStartsAtLt(startsAtLt *string) *ContractsProjectListParams {
	o.SetStartsAtLt(startsAtLt)
	return o
}

// SetStartsAtLt adds the startsAtLt to the contracts project list params
func (o *ContractsProjectListParams) SetStartsAtLt(startsAtLt *string) {
	o.StartsAtLt = startsAtLt
}

// WithStartsAtLte adds the startsAtLte to the contracts project list params
func (o *ContractsProjectListParams) WithStartsAtLte(startsAtLte *string) *ContractsProjectListParams {
	o.SetStartsAtLte(startsAtLte)
	return o
}

// SetStartsAtLte adds the startsAtLte to the contracts project list params
func (o *ContractsProjectListParams) SetStartsAtLte(startsAtLte *string) {
	o.StartsAtLte = startsAtLte
}

// WriteToRequest writes these params to a swagger request
func (o *ContractsProjectListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Active != nil {

		// query param active
		var qrActive string
		if o.Active != nil {
			qrActive = *o.Active
		}
		qActive := qrActive
		if qActive != "" {
			if err := r.SetQueryParam("active", qActive); err != nil {
				return err
			}
		}

	}

	if o.Company != nil {

		// query param company
		var qrCompany string
		if o.Company != nil {
			qrCompany = *o.Company
		}
		qCompany := qrCompany
		if qCompany != "" {
			if err := r.SetQueryParam("company", qCompany); err != nil {
				return err
			}
		}

	}

	if o.CompanyCountry != nil {

		// query param company__country
		var qrCompanyCountry string
		if o.CompanyCountry != nil {
			qrCompanyCountry = *o.CompanyCountry
		}
		qCompanyCountry := qrCompanyCountry
		if qCompanyCountry != "" {
			if err := r.SetQueryParam("company__country", qCompanyCountry); err != nil {
				return err
			}
		}

	}

	if o.CompanyInternal != nil {

		// query param company__internal
		var qrCompanyInternal string
		if o.CompanyInternal != nil {
			qrCompanyInternal = *o.CompanyInternal
		}
		qCompanyInternal := qrCompanyInternal
		if qCompanyInternal != "" {
			if err := r.SetQueryParam("company__internal", qCompanyInternal); err != nil {
				return err
			}
		}

	}

	if o.CompanyName != nil {

		// query param company__name
		var qrCompanyName string
		if o.CompanyName != nil {
			qrCompanyName = *o.CompanyName
		}
		qCompanyName := qrCompanyName
		if qCompanyName != "" {
			if err := r.SetQueryParam("company__name", qCompanyName); err != nil {
				return err
			}
		}

	}

	if o.CompanyNameContains != nil {

		// query param company__name__contains
		var qrCompanyNameContains string
		if o.CompanyNameContains != nil {
			qrCompanyNameContains = *o.CompanyNameContains
		}
		qCompanyNameContains := qrCompanyNameContains
		if qCompanyNameContains != "" {
			if err := r.SetQueryParam("company__name__contains", qCompanyNameContains); err != nil {
				return err
			}
		}

	}

	if o.CompanyNameIcontains != nil {

		// query param company__name__icontains
		var qrCompanyNameIcontains string
		if o.CompanyNameIcontains != nil {
			qrCompanyNameIcontains = *o.CompanyNameIcontains
		}
		qCompanyNameIcontains := qrCompanyNameIcontains
		if qCompanyNameIcontains != "" {
			if err := r.SetQueryParam("company__name__icontains", qCompanyNameIcontains); err != nil {
				return err
			}
		}

	}

	if o.CompanyVatIdentificationNumber != nil {

		// query param company__vat_identification_number
		var qrCompanyVatIdentificationNumber string
		if o.CompanyVatIdentificationNumber != nil {
			qrCompanyVatIdentificationNumber = *o.CompanyVatIdentificationNumber
		}
		qCompanyVatIdentificationNumber := qrCompanyVatIdentificationNumber
		if qCompanyVatIdentificationNumber != "" {
			if err := r.SetQueryParam("company__vat_identification_number", qCompanyVatIdentificationNumber); err != nil {
				return err
			}
		}

	}

	if o.ContractGroupsLabel != nil {

		// query param contract_groups__label
		var qrContractGroupsLabel string
		if o.ContractGroupsLabel != nil {
			qrContractGroupsLabel = *o.ContractGroupsLabel
		}
		qContractGroupsLabel := qrContractGroupsLabel
		if qContractGroupsLabel != "" {
			if err := r.SetQueryParam("contract_groups__label", qContractGroupsLabel); err != nil {
				return err
			}
		}

	}

	if o.ContractGroupsLabelContains != nil {

		// query param contract_groups__label__contains
		var qrContractGroupsLabelContains string
		if o.ContractGroupsLabelContains != nil {
			qrContractGroupsLabelContains = *o.ContractGroupsLabelContains
		}
		qContractGroupsLabelContains := qrContractGroupsLabelContains
		if qContractGroupsLabelContains != "" {
			if err := r.SetQueryParam("contract_groups__label__contains", qContractGroupsLabelContains); err != nil {
				return err
			}
		}

	}

	if o.ContractGroupsLabelIcontains != nil {

		// query param contract_groups__label__icontains
		var qrContractGroupsLabelIcontains string
		if o.ContractGroupsLabelIcontains != nil {
			qrContractGroupsLabelIcontains = *o.ContractGroupsLabelIcontains
		}
		qContractGroupsLabelIcontains := qrContractGroupsLabelIcontains
		if qContractGroupsLabelIcontains != "" {
			if err := r.SetQueryParam("contract_groups__label__icontains", qContractGroupsLabelIcontains); err != nil {
				return err
			}
		}

	}

	if o.ContractuserUserFirstName != nil {

		// query param contractuser__user__first_name
		var qrContractuserUserFirstName string
		if o.ContractuserUserFirstName != nil {
			qrContractuserUserFirstName = *o.ContractuserUserFirstName
		}
		qContractuserUserFirstName := qrContractuserUserFirstName
		if qContractuserUserFirstName != "" {
			if err := r.SetQueryParam("contractuser__user__first_name", qContractuserUserFirstName); err != nil {
				return err
			}
		}

	}

	if o.ContractuserUserFirstNameContains != nil {

		// query param contractuser__user__first_name__contains
		var qrContractuserUserFirstNameContains string
		if o.ContractuserUserFirstNameContains != nil {
			qrContractuserUserFirstNameContains = *o.ContractuserUserFirstNameContains
		}
		qContractuserUserFirstNameContains := qrContractuserUserFirstNameContains
		if qContractuserUserFirstNameContains != "" {
			if err := r.SetQueryParam("contractuser__user__first_name__contains", qContractuserUserFirstNameContains); err != nil {
				return err
			}
		}

	}

	if o.ContractuserUserFirstNameIcontains != nil {

		// query param contractuser__user__first_name__icontains
		var qrContractuserUserFirstNameIcontains string
		if o.ContractuserUserFirstNameIcontains != nil {
			qrContractuserUserFirstNameIcontains = *o.ContractuserUserFirstNameIcontains
		}
		qContractuserUserFirstNameIcontains := qrContractuserUserFirstNameIcontains
		if qContractuserUserFirstNameIcontains != "" {
			if err := r.SetQueryParam("contractuser__user__first_name__icontains", qContractuserUserFirstNameIcontains); err != nil {
				return err
			}
		}

	}

	if o.ContractuserUserGroups != nil {

		// query param contractuser__user__groups
		var qrContractuserUserGroups string
		if o.ContractuserUserGroups != nil {
			qrContractuserUserGroups = *o.ContractuserUserGroups
		}
		qContractuserUserGroups := qrContractuserUserGroups
		if qContractuserUserGroups != "" {
			if err := r.SetQueryParam("contractuser__user__groups", qContractuserUserGroups); err != nil {
				return err
			}
		}

	}

	if o.ContractuserUserGroupsContains != nil {

		// query param contractuser__user__groups__contains
		var qrContractuserUserGroupsContains string
		if o.ContractuserUserGroupsContains != nil {
			qrContractuserUserGroupsContains = *o.ContractuserUserGroupsContains
		}
		qContractuserUserGroupsContains := qrContractuserUserGroupsContains
		if qContractuserUserGroupsContains != "" {
			if err := r.SetQueryParam("contractuser__user__groups__contains", qContractuserUserGroupsContains); err != nil {
				return err
			}
		}

	}

	if o.ContractuserUserGroupsIcontains != nil {

		// query param contractuser__user__groups__icontains
		var qrContractuserUserGroupsIcontains string
		if o.ContractuserUserGroupsIcontains != nil {
			qrContractuserUserGroupsIcontains = *o.ContractuserUserGroupsIcontains
		}
		qContractuserUserGroupsIcontains := qrContractuserUserGroupsIcontains
		if qContractuserUserGroupsIcontains != "" {
			if err := r.SetQueryParam("contractuser__user__groups__icontains", qContractuserUserGroupsIcontains); err != nil {
				return err
			}
		}

	}

	if o.ContractuserUserID != nil {

		// query param contractuser__user__id
		var qrContractuserUserID string
		if o.ContractuserUserID != nil {
			qrContractuserUserID = *o.ContractuserUserID
		}
		qContractuserUserID := qrContractuserUserID
		if qContractuserUserID != "" {
			if err := r.SetQueryParam("contractuser__user__id", qContractuserUserID); err != nil {
				return err
			}
		}

	}

	if o.ContractuserUserLastName != nil {

		// query param contractuser__user__last_name
		var qrContractuserUserLastName string
		if o.ContractuserUserLastName != nil {
			qrContractuserUserLastName = *o.ContractuserUserLastName
		}
		qContractuserUserLastName := qrContractuserUserLastName
		if qContractuserUserLastName != "" {
			if err := r.SetQueryParam("contractuser__user__last_name", qContractuserUserLastName); err != nil {
				return err
			}
		}

	}

	if o.ContractuserUserLastNameContains != nil {

		// query param contractuser__user__last_name__contains
		var qrContractuserUserLastNameContains string
		if o.ContractuserUserLastNameContains != nil {
			qrContractuserUserLastNameContains = *o.ContractuserUserLastNameContains
		}
		qContractuserUserLastNameContains := qrContractuserUserLastNameContains
		if qContractuserUserLastNameContains != "" {
			if err := r.SetQueryParam("contractuser__user__last_name__contains", qContractuserUserLastNameContains); err != nil {
				return err
			}
		}

	}

	if o.ContractuserUserLastNameIcontains != nil {

		// query param contractuser__user__last_name__icontains
		var qrContractuserUserLastNameIcontains string
		if o.ContractuserUserLastNameIcontains != nil {
			qrContractuserUserLastNameIcontains = *o.ContractuserUserLastNameIcontains
		}
		qContractuserUserLastNameIcontains := qrContractuserUserLastNameIcontains
		if qContractuserUserLastNameIcontains != "" {
			if err := r.SetQueryParam("contractuser__user__last_name__icontains", qContractuserUserLastNameIcontains); err != nil {
				return err
			}
		}

	}

	if o.ContractuserUserUsername != nil {

		// query param contractuser__user__username
		var qrContractuserUserUsername string
		if o.ContractuserUserUsername != nil {
			qrContractuserUserUsername = *o.ContractuserUserUsername
		}
		qContractuserUserUsername := qrContractuserUserUsername
		if qContractuserUserUsername != "" {
			if err := r.SetQueryParam("contractuser__user__username", qContractuserUserUsername); err != nil {
				return err
			}
		}

	}

	if o.ContractuserUserUsernameContains != nil {

		// query param contractuser__user__username__contains
		var qrContractuserUserUsernameContains string
		if o.ContractuserUserUsernameContains != nil {
			qrContractuserUserUsernameContains = *o.ContractuserUserUsernameContains
		}
		qContractuserUserUsernameContains := qrContractuserUserUsernameContains
		if qContractuserUserUsernameContains != "" {
			if err := r.SetQueryParam("contractuser__user__username__contains", qContractuserUserUsernameContains); err != nil {
				return err
			}
		}

	}

	if o.ContractuserUserUsernameIcontains != nil {

		// query param contractuser__user__username__icontains
		var qrContractuserUserUsernameIcontains string
		if o.ContractuserUserUsernameIcontains != nil {
			qrContractuserUserUsernameIcontains = *o.ContractuserUserUsernameIcontains
		}
		qContractuserUserUsernameIcontains := qrContractuserUserUsernameIcontains
		if qContractuserUserUsernameIcontains != "" {
			if err := r.SetQueryParam("contractuser__user__username__icontains", qContractuserUserUsernameIcontains); err != nil {
				return err
			}
		}

	}

	if o.CustomerCountry != nil {

		// query param customer__country
		var qrCustomerCountry string
		if o.CustomerCountry != nil {
			qrCustomerCountry = *o.CustomerCountry
		}
		qCustomerCountry := qrCustomerCountry
		if qCustomerCountry != "" {
			if err := r.SetQueryParam("customer__country", qCustomerCountry); err != nil {
				return err
			}
		}

	}

	if o.CustomerInternal != nil {

		// query param customer__internal
		var qrCustomerInternal string
		if o.CustomerInternal != nil {
			qrCustomerInternal = *o.CustomerInternal
		}
		qCustomerInternal := qrCustomerInternal
		if qCustomerInternal != "" {
			if err := r.SetQueryParam("customer__internal", qCustomerInternal); err != nil {
				return err
			}
		}

	}

	if o.CustomerName != nil {

		// query param customer__name
		var qrCustomerName string
		if o.CustomerName != nil {
			qrCustomerName = *o.CustomerName
		}
		qCustomerName := qrCustomerName
		if qCustomerName != "" {
			if err := r.SetQueryParam("customer__name", qCustomerName); err != nil {
				return err
			}
		}

	}

	if o.CustomerNameContains != nil {

		// query param customer__name__contains
		var qrCustomerNameContains string
		if o.CustomerNameContains != nil {
			qrCustomerNameContains = *o.CustomerNameContains
		}
		qCustomerNameContains := qrCustomerNameContains
		if qCustomerNameContains != "" {
			if err := r.SetQueryParam("customer__name__contains", qCustomerNameContains); err != nil {
				return err
			}
		}

	}

	if o.CustomerNameIcontains != nil {

		// query param customer__name__icontains
		var qrCustomerNameIcontains string
		if o.CustomerNameIcontains != nil {
			qrCustomerNameIcontains = *o.CustomerNameIcontains
		}
		qCustomerNameIcontains := qrCustomerNameIcontains
		if qCustomerNameIcontains != "" {
			if err := r.SetQueryParam("customer__name__icontains", qCustomerNameIcontains); err != nil {
				return err
			}
		}

	}

	if o.CustomerVatIdentificationNumber != nil {

		// query param customer__vat_identification_number
		var qrCustomerVatIdentificationNumber string
		if o.CustomerVatIdentificationNumber != nil {
			qrCustomerVatIdentificationNumber = *o.CustomerVatIdentificationNumber
		}
		qCustomerVatIdentificationNumber := qrCustomerVatIdentificationNumber
		if qCustomerVatIdentificationNumber != "" {
			if err := r.SetQueryParam("customer__vat_identification_number", qCustomerVatIdentificationNumber); err != nil {
				return err
			}
		}

	}

	if o.Description != nil {

		// query param description
		var qrDescription string
		if o.Description != nil {
			qrDescription = *o.Description
		}
		qDescription := qrDescription
		if qDescription != "" {
			if err := r.SetQueryParam("description", qDescription); err != nil {
				return err
			}
		}

	}

	if o.DescriptionContains != nil {

		// query param description__contains
		var qrDescriptionContains string
		if o.DescriptionContains != nil {
			qrDescriptionContains = *o.DescriptionContains
		}
		qDescriptionContains := qrDescriptionContains
		if qDescriptionContains != "" {
			if err := r.SetQueryParam("description__contains", qDescriptionContains); err != nil {
				return err
			}
		}

	}

	if o.DescriptionIcontains != nil {

		// query param description__icontains
		var qrDescriptionIcontains string
		if o.DescriptionIcontains != nil {
			qrDescriptionIcontains = *o.DescriptionIcontains
		}
		qDescriptionIcontains := qrDescriptionIcontains
		if qDescriptionIcontains != "" {
			if err := r.SetQueryParam("description__icontains", qDescriptionIcontains); err != nil {
				return err
			}
		}

	}

	if o.EndsAt != nil {

		// query param ends_at
		var qrEndsAt string
		if o.EndsAt != nil {
			qrEndsAt = *o.EndsAt
		}
		qEndsAt := qrEndsAt
		if qEndsAt != "" {
			if err := r.SetQueryParam("ends_at", qEndsAt); err != nil {
				return err
			}
		}

	}

	if o.EndsAtGt != nil {

		// query param ends_at__gt
		var qrEndsAtGt string
		if o.EndsAtGt != nil {
			qrEndsAtGt = *o.EndsAtGt
		}
		qEndsAtGt := qrEndsAtGt
		if qEndsAtGt != "" {
			if err := r.SetQueryParam("ends_at__gt", qEndsAtGt); err != nil {
				return err
			}
		}

	}

	if o.EndsAtGte != nil {

		// query param ends_at__gte
		var qrEndsAtGte string
		if o.EndsAtGte != nil {
			qrEndsAtGte = *o.EndsAtGte
		}
		qEndsAtGte := qrEndsAtGte
		if qEndsAtGte != "" {
			if err := r.SetQueryParam("ends_at__gte", qEndsAtGte); err != nil {
				return err
			}
		}

	}

	if o.EndsAtLt != nil {

		// query param ends_at__lt
		var qrEndsAtLt string
		if o.EndsAtLt != nil {
			qrEndsAtLt = *o.EndsAtLt
		}
		qEndsAtLt := qrEndsAtLt
		if qEndsAtLt != "" {
			if err := r.SetQueryParam("ends_at__lt", qEndsAtLt); err != nil {
				return err
			}
		}

	}

	if o.EndsAtLte != nil {

		// query param ends_at__lte
		var qrEndsAtLte string
		if o.EndsAtLte != nil {
			qrEndsAtLte = *o.EndsAtLte
		}
		qEndsAtLte := qrEndsAtLte
		if qEndsAtLte != "" {
			if err := r.SetQueryParam("ends_at__lte", qEndsAtLte); err != nil {
				return err
			}
		}

	}

	if o.FixedFee != nil {

		// query param fixed_fee
		var qrFixedFee string
		if o.FixedFee != nil {
			qrFixedFee = *o.FixedFee
		}
		qFixedFee := qrFixedFee
		if qFixedFee != "" {
			if err := r.SetQueryParam("fixed_fee", qFixedFee); err != nil {
				return err
			}
		}

	}

	if o.FixedFeeContains != nil {

		// query param fixed_fee__contains
		var qrFixedFeeContains string
		if o.FixedFeeContains != nil {
			qrFixedFeeContains = *o.FixedFeeContains
		}
		qFixedFeeContains := qrFixedFeeContains
		if qFixedFeeContains != "" {
			if err := r.SetQueryParam("fixed_fee__contains", qFixedFeeContains); err != nil {
				return err
			}
		}

	}

	if o.Label != nil {

		// query param label
		var qrLabel string
		if o.Label != nil {
			qrLabel = *o.Label
		}
		qLabel := qrLabel
		if qLabel != "" {
			if err := r.SetQueryParam("label", qLabel); err != nil {
				return err
			}
		}

	}

	if o.LabelContains != nil {

		// query param label__contains
		var qrLabelContains string
		if o.LabelContains != nil {
			qrLabelContains = *o.LabelContains
		}
		qLabelContains := qrLabelContains
		if qLabelContains != "" {
			if err := r.SetQueryParam("label__contains", qLabelContains); err != nil {
				return err
			}
		}

	}

	if o.LabelIcontains != nil {

		// query param label__icontains
		var qrLabelIcontains string
		if o.LabelIcontains != nil {
			qrLabelIcontains = *o.LabelIcontains
		}
		qLabelIcontains := qrLabelIcontains
		if qLabelIcontains != "" {
			if err := r.SetQueryParam("label__icontains", qLabelIcontains); err != nil {
				return err
			}
		}

	}

	if o.OrderBy != nil {

		// query param order_by
		var qrOrderBy string
		if o.OrderBy != nil {
			qrOrderBy = *o.OrderBy
		}
		qOrderBy := qrOrderBy
		if qOrderBy != "" {
			if err := r.SetQueryParam("order_by", qOrderBy); err != nil {
				return err
			}
		}

	}

	if o.Page != nil {

		// query param page
		var qrPage string
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := qrPage
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if o.PageSize != nil {

		// query param page_size
		var qrPageSize string
		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := qrPageSize
		if qPageSize != "" {
			if err := r.SetQueryParam("page_size", qPageSize); err != nil {
				return err
			}
		}

	}

	if o.PerformanceTypesID != nil {

		// query param performance_types__id
		var qrPerformanceTypesID string
		if o.PerformanceTypesID != nil {
			qrPerformanceTypesID = *o.PerformanceTypesID
		}
		qPerformanceTypesID := qrPerformanceTypesID
		if qPerformanceTypesID != "" {
			if err := r.SetQueryParam("performance_types__id", qPerformanceTypesID); err != nil {
				return err
			}
		}

	}

	if o.PerformanceTypesLabel != nil {

		// query param performance_types__label
		var qrPerformanceTypesLabel string
		if o.PerformanceTypesLabel != nil {
			qrPerformanceTypesLabel = *o.PerformanceTypesLabel
		}
		qPerformanceTypesLabel := qrPerformanceTypesLabel
		if qPerformanceTypesLabel != "" {
			if err := r.SetQueryParam("performance_types__label", qPerformanceTypesLabel); err != nil {
				return err
			}
		}

	}

	if o.PerformanceTypesLabelContains != nil {

		// query param performance_types__label__contains
		var qrPerformanceTypesLabelContains string
		if o.PerformanceTypesLabelContains != nil {
			qrPerformanceTypesLabelContains = *o.PerformanceTypesLabelContains
		}
		qPerformanceTypesLabelContains := qrPerformanceTypesLabelContains
		if qPerformanceTypesLabelContains != "" {
			if err := r.SetQueryParam("performance_types__label__contains", qPerformanceTypesLabelContains); err != nil {
				return err
			}
		}

	}

	if o.PerformanceTypesLabelIcontains != nil {

		// query param performance_types__label__icontains
		var qrPerformanceTypesLabelIcontains string
		if o.PerformanceTypesLabelIcontains != nil {
			qrPerformanceTypesLabelIcontains = *o.PerformanceTypesLabelIcontains
		}
		qPerformanceTypesLabelIcontains := qrPerformanceTypesLabelIcontains
		if qPerformanceTypesLabelIcontains != "" {
			if err := r.SetQueryParam("performance_types__label__icontains", qPerformanceTypesLabelIcontains); err != nil {
				return err
			}
		}

	}

	if o.StartsAt != nil {

		// query param starts_at
		var qrStartsAt string
		if o.StartsAt != nil {
			qrStartsAt = *o.StartsAt
		}
		qStartsAt := qrStartsAt
		if qStartsAt != "" {
			if err := r.SetQueryParam("starts_at", qStartsAt); err != nil {
				return err
			}
		}

	}

	if o.StartsAtGt != nil {

		// query param starts_at__gt
		var qrStartsAtGt string
		if o.StartsAtGt != nil {
			qrStartsAtGt = *o.StartsAtGt
		}
		qStartsAtGt := qrStartsAtGt
		if qStartsAtGt != "" {
			if err := r.SetQueryParam("starts_at__gt", qStartsAtGt); err != nil {
				return err
			}
		}

	}

	if o.StartsAtGte != nil {

		// query param starts_at__gte
		var qrStartsAtGte string
		if o.StartsAtGte != nil {
			qrStartsAtGte = *o.StartsAtGte
		}
		qStartsAtGte := qrStartsAtGte
		if qStartsAtGte != "" {
			if err := r.SetQueryParam("starts_at__gte", qStartsAtGte); err != nil {
				return err
			}
		}

	}

	if o.StartsAtLt != nil {

		// query param starts_at__lt
		var qrStartsAtLt string
		if o.StartsAtLt != nil {
			qrStartsAtLt = *o.StartsAtLt
		}
		qStartsAtLt := qrStartsAtLt
		if qStartsAtLt != "" {
			if err := r.SetQueryParam("starts_at__lt", qStartsAtLt); err != nil {
				return err
			}
		}

	}

	if o.StartsAtLte != nil {

		// query param starts_at__lte
		var qrStartsAtLte string
		if o.StartsAtLte != nil {
			qrStartsAtLte = *o.StartsAtLte
		}
		qStartsAtLte := qrStartsAtLte
		if qStartsAtLte != "" {
			if err := r.SetQueryParam("starts_at__lte", qStartsAtLte); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewUsersListParams creates a new UsersListParams object
// with the default values initialized.
func NewUsersListParams() *UsersListParams {
	var ()
	return &UsersListParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUsersListParamsWithTimeout creates a new UsersListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUsersListParamsWithTimeout(timeout time.Duration) *UsersListParams {
	var ()
	return &UsersListParams{

		timeout: timeout,
	}
}

// NewUsersListParamsWithContext creates a new UsersListParams object
// with the default values initialized, and the ability to set a context for a request
func NewUsersListParamsWithContext(ctx context.Context) *UsersListParams {
	var ()
	return &UsersListParams{

		Context: ctx,
	}
}

// NewUsersListParamsWithHTTPClient creates a new UsersListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUsersListParamsWithHTTPClient(client *http.Client) *UsersListParams {
	var ()
	return &UsersListParams{
		HTTPClient: client,
	}
}

/*UsersListParams contains all the parameters to send to the API endpoint
for the users list operation typically these are written to a http.Request
*/
type UsersListParams struct {

	/*ActiveFriday*/
	ActiveFriday *string
	/*ActiveMonday*/
	ActiveMonday *string
	/*ActiveSaturday*/
	ActiveSaturday *string
	/*ActiveSunday*/
	ActiveSunday *string
	/*ActiveThursday*/
	ActiveThursday *string
	/*ActiveTuesday*/
	ActiveTuesday *string
	/*ActiveWednesday*/
	ActiveWednesday *string
	/*Email*/
	Email *string
	/*EmploymentcontractCompanyName*/
	EmploymentcontractCompanyName *string
	/*EmploymentcontractCompanyNameContains*/
	EmploymentcontractCompanyNameContains *string
	/*EmploymentcontractCompanyNameIcontains*/
	EmploymentcontractCompanyNameIcontains *string
	/*EmploymentcontractEndedAt*/
	EmploymentcontractEndedAt *string
	/*EmploymentcontractEndedAtYearGt*/
	EmploymentcontractEndedAtYearGt *string
	/*EmploymentcontractEndedAtYearGte*/
	EmploymentcontractEndedAtYearGte *string
	/*EmploymentcontractEndedAtYearLt*/
	EmploymentcontractEndedAtYearLt *string
	/*EmploymentcontractEndedAtYearLte*/
	EmploymentcontractEndedAtYearLte *string
	/*EmploymentcontractStartedAt*/
	EmploymentcontractStartedAt *string
	/*EmploymentcontractStartedAtYearGt*/
	EmploymentcontractStartedAtYearGt *string
	/*EmploymentcontractStartedAtYearGte*/
	EmploymentcontractStartedAtYearGte *string
	/*EmploymentcontractStartedAtYearLt*/
	EmploymentcontractStartedAtYearLt *string
	/*EmploymentcontractStartedAtYearLte*/
	EmploymentcontractStartedAtYearLte *string
	/*EmploymentcontractType*/
	EmploymentcontractType *string
	/*FirstName*/
	FirstName *string
	/*FirstNameContains*/
	FirstNameContains *string
	/*FirstNameIcontains*/
	FirstNameIcontains *string
	/*Groups*/
	Groups *string
	/*GroupsContains*/
	GroupsContains *string
	/*GroupsIcontains*/
	GroupsIcontains *string
	/*IsActive*/
	IsActive *string
	/*LastName*/
	LastName *string
	/*LastNameContains*/
	LastNameContains *string
	/*LastNameIcontains*/
	LastNameIcontains *string
	/*LeaveLeavedateEndsAtGte*/
	LeaveLeavedateEndsAtGte *string
	/*LeaveLeavedateStartsAtLte*/
	LeaveLeavedateStartsAtLte *string
	/*OrderBy*/
	OrderBy *string
	/*Page*/
	Page *string
	/*PageSize*/
	PageSize *string
	/*UserinfoBirthDate*/
	UserinfoBirthDate *string
	/*UserinfoBirthDateYearGt*/
	UserinfoBirthDateYearGt *string
	/*UserinfoBirthDateYearGte*/
	UserinfoBirthDateYearGte *string
	/*UserinfoBirthDateYearLt*/
	UserinfoBirthDateYearLt *string
	/*UserinfoBirthDateYearLte*/
	UserinfoBirthDateYearLte *string
	/*UserinfoCountryIexact*/
	UserinfoCountryIexact *string
	/*UserinfoGenderIexact*/
	UserinfoGenderIexact *string
	/*Username*/
	Username *string
	/*UserrelativeName*/
	UserrelativeName *string
	/*UserrelativeNameContains*/
	UserrelativeNameContains *string
	/*UserrelativeNameIcontains*/
	UserrelativeNameIcontains *string
	/*WorkscheduleLabel*/
	WorkscheduleLabel *string
	/*WorkscheduleLabelContains*/
	WorkscheduleLabelContains *string
	/*WorkscheduleLabelIcontains*/
	WorkscheduleLabelIcontains *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the users list params
func (o *UsersListParams) WithTimeout(timeout time.Duration) *UsersListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the users list params
func (o *UsersListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the users list params
func (o *UsersListParams) WithContext(ctx context.Context) *UsersListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the users list params
func (o *UsersListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the users list params
func (o *UsersListParams) WithHTTPClient(client *http.Client) *UsersListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the users list params
func (o *UsersListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithActiveFriday adds the activeFriday to the users list params
func (o *UsersListParams) WithActiveFriday(activeFriday *string) *UsersListParams {
	o.SetActiveFriday(activeFriday)
	return o
}

// SetActiveFriday adds the activeFriday to the users list params
func (o *UsersListParams) SetActiveFriday(activeFriday *string) {
	o.ActiveFriday = activeFriday
}

// WithActiveMonday adds the activeMonday to the users list params
func (o *UsersListParams) WithActiveMonday(activeMonday *string) *UsersListParams {
	o.SetActiveMonday(activeMonday)
	return o
}

// SetActiveMonday adds the activeMonday to the users list params
func (o *UsersListParams) SetActiveMonday(activeMonday *string) {
	o.ActiveMonday = activeMonday
}

// WithActiveSaturday adds the activeSaturday to the users list params
func (o *UsersListParams) WithActiveSaturday(activeSaturday *string) *UsersListParams {
	o.SetActiveSaturday(activeSaturday)
	return o
}

// SetActiveSaturday adds the activeSaturday to the users list params
func (o *UsersListParams) SetActiveSaturday(activeSaturday *string) {
	o.ActiveSaturday = activeSaturday
}

// WithActiveSunday adds the activeSunday to the users list params
func (o *UsersListParams) WithActiveSunday(activeSunday *string) *UsersListParams {
	o.SetActiveSunday(activeSunday)
	return o
}

// SetActiveSunday adds the activeSunday to the users list params
func (o *UsersListParams) SetActiveSunday(activeSunday *string) {
	o.ActiveSunday = activeSunday
}

// WithActiveThursday adds the activeThursday to the users list params
func (o *UsersListParams) WithActiveThursday(activeThursday *string) *UsersListParams {
	o.SetActiveThursday(activeThursday)
	return o
}

// SetActiveThursday adds the activeThursday to the users list params
func (o *UsersListParams) SetActiveThursday(activeThursday *string) {
	o.ActiveThursday = activeThursday
}

// WithActiveTuesday adds the activeTuesday to the users list params
func (o *UsersListParams) WithActiveTuesday(activeTuesday *string) *UsersListParams {
	o.SetActiveTuesday(activeTuesday)
	return o
}

// SetActiveTuesday adds the activeTuesday to the users list params
func (o *UsersListParams) SetActiveTuesday(activeTuesday *string) {
	o.ActiveTuesday = activeTuesday
}

// WithActiveWednesday adds the activeWednesday to the users list params
func (o *UsersListParams) WithActiveWednesday(activeWednesday *string) *UsersListParams {
	o.SetActiveWednesday(activeWednesday)
	return o
}

// SetActiveWednesday adds the activeWednesday to the users list params
func (o *UsersListParams) SetActiveWednesday(activeWednesday *string) {
	o.ActiveWednesday = activeWednesday
}

// WithEmail adds the email to the users list params
func (o *UsersListParams) WithEmail(email *string) *UsersListParams {
	o.SetEmail(email)
	return o
}

// SetEmail adds the email to the users list params
func (o *UsersListParams) SetEmail(email *string) {
	o.Email = email
}

// WithEmploymentcontractCompanyName adds the employmentcontractCompanyName to the users list params
func (o *UsersListParams) WithEmploymentcontractCompanyName(employmentcontractCompanyName *string) *UsersListParams {
	o.SetEmploymentcontractCompanyName(employmentcontractCompanyName)
	return o
}

// SetEmploymentcontractCompanyName adds the employmentcontractCompanyName to the users list params
func (o *UsersListParams) SetEmploymentcontractCompanyName(employmentcontractCompanyName *string) {
	o.EmploymentcontractCompanyName = employmentcontractCompanyName
}

// WithEmploymentcontractCompanyNameContains adds the employmentcontractCompanyNameContains to the users list params
func (o *UsersListParams) WithEmploymentcontractCompanyNameContains(employmentcontractCompanyNameContains *string) *UsersListParams {
	o.SetEmploymentcontractCompanyNameContains(employmentcontractCompanyNameContains)
	return o
}

// SetEmploymentcontractCompanyNameContains adds the employmentcontractCompanyNameContains to the users list params
func (o *UsersListParams) SetEmploymentcontractCompanyNameContains(employmentcontractCompanyNameContains *string) {
	o.EmploymentcontractCompanyNameContains = employmentcontractCompanyNameContains
}

// WithEmploymentcontractCompanyNameIcontains adds the employmentcontractCompanyNameIcontains to the users list params
func (o *UsersListParams) WithEmploymentcontractCompanyNameIcontains(employmentcontractCompanyNameIcontains *string) *UsersListParams {
	o.SetEmploymentcontractCompanyNameIcontains(employmentcontractCompanyNameIcontains)
	return o
}

// SetEmploymentcontractCompanyNameIcontains adds the employmentcontractCompanyNameIcontains to the users list params
func (o *UsersListParams) SetEmploymentcontractCompanyNameIcontains(employmentcontractCompanyNameIcontains *string) {
	o.EmploymentcontractCompanyNameIcontains = employmentcontractCompanyNameIcontains
}

// WithEmploymentcontractEndedAt adds the employmentcontractEndedAt to the users list params
func (o *UsersListParams) WithEmploymentcontractEndedAt(employmentcontractEndedAt *string) *UsersListParams {
	o.SetEmploymentcontractEndedAt(employmentcontractEndedAt)
	return o
}

// SetEmploymentcontractEndedAt adds the employmentcontractEndedAt to the users list params
func (o *UsersListParams) SetEmploymentcontractEndedAt(employmentcontractEndedAt *string) {
	o.EmploymentcontractEndedAt = employmentcontractEndedAt
}

// WithEmploymentcontractEndedAtYearGt adds the employmentcontractEndedAtYearGt to the users list params
func (o *UsersListParams) WithEmploymentcontractEndedAtYearGt(employmentcontractEndedAtYearGt *string) *UsersListParams {
	o.SetEmploymentcontractEndedAtYearGt(employmentcontractEndedAtYearGt)
	return o
}

// SetEmploymentcontractEndedAtYearGt adds the employmentcontractEndedAtYearGt to the users list params
func (o *UsersListParams) SetEmploymentcontractEndedAtYearGt(employmentcontractEndedAtYearGt *string) {
	o.EmploymentcontractEndedAtYearGt = employmentcontractEndedAtYearGt
}

// WithEmploymentcontractEndedAtYearGte adds the employmentcontractEndedAtYearGte to the users list params
func (o *UsersListParams) WithEmploymentcontractEndedAtYearGte(employmentcontractEndedAtYearGte *string) *UsersListParams {
	o.SetEmploymentcontractEndedAtYearGte(employmentcontractEndedAtYearGte)
	return o
}

// SetEmploymentcontractEndedAtYearGte adds the employmentcontractEndedAtYearGte to the users list params
func (o *UsersListParams) SetEmploymentcontractEndedAtYearGte(employmentcontractEndedAtYearGte *string) {
	o.EmploymentcontractEndedAtYearGte = employmentcontractEndedAtYearGte
}

// WithEmploymentcontractEndedAtYearLt adds the employmentcontractEndedAtYearLt to the users list params
func (o *UsersListParams) WithEmploymentcontractEndedAtYearLt(employmentcontractEndedAtYearLt *string) *UsersListParams {
	o.SetEmploymentcontractEndedAtYearLt(employmentcontractEndedAtYearLt)
	return o
}

// SetEmploymentcontractEndedAtYearLt adds the employmentcontractEndedAtYearLt to the users list params
func (o *UsersListParams) SetEmploymentcontractEndedAtYearLt(employmentcontractEndedAtYearLt *string) {
	o.EmploymentcontractEndedAtYearLt = employmentcontractEndedAtYearLt
}

// WithEmploymentcontractEndedAtYearLte adds the employmentcontractEndedAtYearLte to the users list params
func (o *UsersListParams) WithEmploymentcontractEndedAtYearLte(employmentcontractEndedAtYearLte *string) *UsersListParams {
	o.SetEmploymentcontractEndedAtYearLte(employmentcontractEndedAtYearLte)
	return o
}

// SetEmploymentcontractEndedAtYearLte adds the employmentcontractEndedAtYearLte to the users list params
func (o *UsersListParams) SetEmploymentcontractEndedAtYearLte(employmentcontractEndedAtYearLte *string) {
	o.EmploymentcontractEndedAtYearLte = employmentcontractEndedAtYearLte
}

// WithEmploymentcontractStartedAt adds the employmentcontractStartedAt to the users list params
func (o *UsersListParams) WithEmploymentcontractStartedAt(employmentcontractStartedAt *string) *UsersListParams {
	o.SetEmploymentcontractStartedAt(employmentcontractStartedAt)
	return o
}

// SetEmploymentcontractStartedAt adds the employmentcontractStartedAt to the users list params
func (o *UsersListParams) SetEmploymentcontractStartedAt(employmentcontractStartedAt *string) {
	o.EmploymentcontractStartedAt = employmentcontractStartedAt
}

// WithEmploymentcontractStartedAtYearGt adds the employmentcontractStartedAtYearGt to the users list params
func (o *UsersListParams) WithEmploymentcontractStartedAtYearGt(employmentcontractStartedAtYearGt *string) *UsersListParams {
	o.SetEmploymentcontractStartedAtYearGt(employmentcontractStartedAtYearGt)
	return o
}

// SetEmploymentcontractStartedAtYearGt adds the employmentcontractStartedAtYearGt to the users list params
func (o *UsersListParams) SetEmploymentcontractStartedAtYearGt(employmentcontractStartedAtYearGt *string) {
	o.EmploymentcontractStartedAtYearGt = employmentcontractStartedAtYearGt
}

// WithEmploymentcontractStartedAtYearGte adds the employmentcontractStartedAtYearGte to the users list params
func (o *UsersListParams) WithEmploymentcontractStartedAtYearGte(employmentcontractStartedAtYearGte *string) *UsersListParams {
	o.SetEmploymentcontractStartedAtYearGte(employmentcontractStartedAtYearGte)
	return o
}

// SetEmploymentcontractStartedAtYearGte adds the employmentcontractStartedAtYearGte to the users list params
func (o *UsersListParams) SetEmploymentcontractStartedAtYearGte(employmentcontractStartedAtYearGte *string) {
	o.EmploymentcontractStartedAtYearGte = employmentcontractStartedAtYearGte
}

// WithEmploymentcontractStartedAtYearLt adds the employmentcontractStartedAtYearLt to the users list params
func (o *UsersListParams) WithEmploymentcontractStartedAtYearLt(employmentcontractStartedAtYearLt *string) *UsersListParams {
	o.SetEmploymentcontractStartedAtYearLt(employmentcontractStartedAtYearLt)
	return o
}

// SetEmploymentcontractStartedAtYearLt adds the employmentcontractStartedAtYearLt to the users list params
func (o *UsersListParams) SetEmploymentcontractStartedAtYearLt(employmentcontractStartedAtYearLt *string) {
	o.EmploymentcontractStartedAtYearLt = employmentcontractStartedAtYearLt
}

// WithEmploymentcontractStartedAtYearLte adds the employmentcontractStartedAtYearLte to the users list params
func (o *UsersListParams) WithEmploymentcontractStartedAtYearLte(employmentcontractStartedAtYearLte *string) *UsersListParams {
	o.SetEmploymentcontractStartedAtYearLte(employmentcontractStartedAtYearLte)
	return o
}

// SetEmploymentcontractStartedAtYearLte adds the employmentcontractStartedAtYearLte to the users list params
func (o *UsersListParams) SetEmploymentcontractStartedAtYearLte(employmentcontractStartedAtYearLte *string) {
	o.EmploymentcontractStartedAtYearLte = employmentcontractStartedAtYearLte
}

// WithEmploymentcontractType adds the employmentcontractType to the users list params
func (o *UsersListParams) WithEmploymentcontractType(employmentcontractType *string) *UsersListParams {
	o.SetEmploymentcontractType(employmentcontractType)
	return o
}

// SetEmploymentcontractType adds the employmentcontractType to the users list params
func (o *UsersListParams) SetEmploymentcontractType(employmentcontractType *string) {
	o.EmploymentcontractType = employmentcontractType
}

// WithFirstName adds the firstName to the users list params
func (o *UsersListParams) WithFirstName(firstName *string) *UsersListParams {
	o.SetFirstName(firstName)
	return o
}

// SetFirstName adds the firstName to the users list params
func (o *UsersListParams) SetFirstName(firstName *string) {
	o.FirstName = firstName
}

// WithFirstNameContains adds the firstNameContains to the users list params
func (o *UsersListParams) WithFirstNameContains(firstNameContains *string) *UsersListParams {
	o.SetFirstNameContains(firstNameContains)
	return o
}

// SetFirstNameContains adds the firstNameContains to the users list params
func (o *UsersListParams) SetFirstNameContains(firstNameContains *string) {
	o.FirstNameContains = firstNameContains
}

// WithFirstNameIcontains adds the firstNameIcontains to the users list params
func (o *UsersListParams) WithFirstNameIcontains(firstNameIcontains *string) *UsersListParams {
	o.SetFirstNameIcontains(firstNameIcontains)
	return o
}

// SetFirstNameIcontains adds the firstNameIcontains to the users list params
func (o *UsersListParams) SetFirstNameIcontains(firstNameIcontains *string) {
	o.FirstNameIcontains = firstNameIcontains
}

// WithGroups adds the groups to the users list params
func (o *UsersListParams) WithGroups(groups *string) *UsersListParams {
	o.SetGroups(groups)
	return o
}

// SetGroups adds the groups to the users list params
func (o *UsersListParams) SetGroups(groups *string) {
	o.Groups = groups
}

// WithGroupsContains adds the groupsContains to the users list params
func (o *UsersListParams) WithGroupsContains(groupsContains *string) *UsersListParams {
	o.SetGroupsContains(groupsContains)
	return o
}

// SetGroupsContains adds the groupsContains to the users list params
func (o *UsersListParams) SetGroupsContains(groupsContains *string) {
	o.GroupsContains = groupsContains
}

// WithGroupsIcontains adds the groupsIcontains to the users list params
func (o *UsersListParams) WithGroupsIcontains(groupsIcontains *string) *UsersListParams {
	o.SetGroupsIcontains(groupsIcontains)
	return o
}

// SetGroupsIcontains adds the groupsIcontains to the users list params
func (o *UsersListParams) SetGroupsIcontains(groupsIcontains *string) {
	o.GroupsIcontains = groupsIcontains
}

// WithIsActive adds the isActive to the users list params
func (o *UsersListParams) WithIsActive(isActive *string) *UsersListParams {
	o.SetIsActive(isActive)
	return o
}

// SetIsActive adds the isActive to the users list params
func (o *UsersListParams) SetIsActive(isActive *string) {
	o.IsActive = isActive
}

// WithLastName adds the lastName to the users list params
func (o *UsersListParams) WithLastName(lastName *string) *UsersListParams {
	o.SetLastName(lastName)
	return o
}

// SetLastName adds the lastName to the users list params
func (o *UsersListParams) SetLastName(lastName *string) {
	o.LastName = lastName
}

// WithLastNameContains adds the lastNameContains to the users list params
func (o *UsersListParams) WithLastNameContains(lastNameContains *string) *UsersListParams {
	o.SetLastNameContains(lastNameContains)
	return o
}

// SetLastNameContains adds the lastNameContains to the users list params
func (o *UsersListParams) SetLastNameContains(lastNameContains *string) {
	o.LastNameContains = lastNameContains
}

// WithLastNameIcontains adds the lastNameIcontains to the users list params
func (o *UsersListParams) WithLastNameIcontains(lastNameIcontains *string) *UsersListParams {
	o.SetLastNameIcontains(lastNameIcontains)
	return o
}

// SetLastNameIcontains adds the lastNameIcontains to the users list params
func (o *UsersListParams) SetLastNameIcontains(lastNameIcontains *string) {
	o.LastNameIcontains = lastNameIcontains
}

// WithLeaveLeavedateEndsAtGte adds the leaveLeavedateEndsAtGte to the users list params
func (o *UsersListParams) WithLeaveLeavedateEndsAtGte(leaveLeavedateEndsAtGte *string) *UsersListParams {
	o.SetLeaveLeavedateEndsAtGte(leaveLeavedateEndsAtGte)
	return o
}

// SetLeaveLeavedateEndsAtGte adds the leaveLeavedateEndsAtGte to the users list params
func (o *UsersListParams) SetLeaveLeavedateEndsAtGte(leaveLeavedateEndsAtGte *string) {
	o.LeaveLeavedateEndsAtGte = leaveLeavedateEndsAtGte
}

// WithLeaveLeavedateStartsAtLte adds the leaveLeavedateStartsAtLte to the users list params
func (o *UsersListParams) WithLeaveLeavedateStartsAtLte(leaveLeavedateStartsAtLte *string) *UsersListParams {
	o.SetLeaveLeavedateStartsAtLte(leaveLeavedateStartsAtLte)
	return o
}

// SetLeaveLeavedateStartsAtLte adds the leaveLeavedateStartsAtLte to the users list params
func (o *UsersListParams) SetLeaveLeavedateStartsAtLte(leaveLeavedateStartsAtLte *string) {
	o.LeaveLeavedateStartsAtLte = leaveLeavedateStartsAtLte
}

// WithOrderBy adds the orderBy to the users list params
func (o *UsersListParams) WithOrderBy(orderBy *string) *UsersListParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the users list params
func (o *UsersListParams) SetOrderBy(orderBy *string) {
	o.OrderBy = orderBy
}

// WithPage adds the page to the users list params
func (o *UsersListParams) WithPage(page *string) *UsersListParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the users list params
func (o *UsersListParams) SetPage(page *string) {
	o.Page = page
}

// WithPageSize adds the pageSize to the users list params
func (o *UsersListParams) WithPageSize(pageSize *string) *UsersListParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the users list params
func (o *UsersListParams) SetPageSize(pageSize *string) {
	o.PageSize = pageSize
}

// WithUserinfoBirthDate adds the userinfoBirthDate to the users list params
func (o *UsersListParams) WithUserinfoBirthDate(userinfoBirthDate *string) *UsersListParams {
	o.SetUserinfoBirthDate(userinfoBirthDate)
	return o
}

// SetUserinfoBirthDate adds the userinfoBirthDate to the users list params
func (o *UsersListParams) SetUserinfoBirthDate(userinfoBirthDate *string) {
	o.UserinfoBirthDate = userinfoBirthDate
}

// WithUserinfoBirthDateYearGt adds the userinfoBirthDateYearGt to the users list params
func (o *UsersListParams) WithUserinfoBirthDateYearGt(userinfoBirthDateYearGt *string) *UsersListParams {
	o.SetUserinfoBirthDateYearGt(userinfoBirthDateYearGt)
	return o
}

// SetUserinfoBirthDateYearGt adds the userinfoBirthDateYearGt to the users list params
func (o *UsersListParams) SetUserinfoBirthDateYearGt(userinfoBirthDateYearGt *string) {
	o.UserinfoBirthDateYearGt = userinfoBirthDateYearGt
}

// WithUserinfoBirthDateYearGte adds the userinfoBirthDateYearGte to the users list params
func (o *UsersListParams) WithUserinfoBirthDateYearGte(userinfoBirthDateYearGte *string) *UsersListParams {
	o.SetUserinfoBirthDateYearGte(userinfoBirthDateYearGte)
	return o
}

// SetUserinfoBirthDateYearGte adds the userinfoBirthDateYearGte to the users list params
func (o *UsersListParams) SetUserinfoBirthDateYearGte(userinfoBirthDateYearGte *string) {
	o.UserinfoBirthDateYearGte = userinfoBirthDateYearGte
}

// WithUserinfoBirthDateYearLt adds the userinfoBirthDateYearLt to the users list params
func (o *UsersListParams) WithUserinfoBirthDateYearLt(userinfoBirthDateYearLt *string) *UsersListParams {
	o.SetUserinfoBirthDateYearLt(userinfoBirthDateYearLt)
	return o
}

// SetUserinfoBirthDateYearLt adds the userinfoBirthDateYearLt to the users list params
func (o *UsersListParams) SetUserinfoBirthDateYearLt(userinfoBirthDateYearLt *string) {
	o.UserinfoBirthDateYearLt = userinfoBirthDateYearLt
}

// WithUserinfoBirthDateYearLte adds the userinfoBirthDateYearLte to the users list params
func (o *UsersListParams) WithUserinfoBirthDateYearLte(userinfoBirthDateYearLte *string) *UsersListParams {
	o.SetUserinfoBirthDateYearLte(userinfoBirthDateYearLte)
	return o
}

// SetUserinfoBirthDateYearLte adds the userinfoBirthDateYearLte to the users list params
func (o *UsersListParams) SetUserinfoBirthDateYearLte(userinfoBirthDateYearLte *string) {
	o.UserinfoBirthDateYearLte = userinfoBirthDateYearLte
}

// WithUserinfoCountryIexact adds the userinfoCountryIexact to the users list params
func (o *UsersListParams) WithUserinfoCountryIexact(userinfoCountryIexact *string) *UsersListParams {
	o.SetUserinfoCountryIexact(userinfoCountryIexact)
	return o
}

// SetUserinfoCountryIexact adds the userinfoCountryIexact to the users list params
func (o *UsersListParams) SetUserinfoCountryIexact(userinfoCountryIexact *string) {
	o.UserinfoCountryIexact = userinfoCountryIexact
}

// WithUserinfoGenderIexact adds the userinfoGenderIexact to the users list params
func (o *UsersListParams) WithUserinfoGenderIexact(userinfoGenderIexact *string) *UsersListParams {
	o.SetUserinfoGenderIexact(userinfoGenderIexact)
	return o
}

// SetUserinfoGenderIexact adds the userinfoGenderIexact to the users list params
func (o *UsersListParams) SetUserinfoGenderIexact(userinfoGenderIexact *string) {
	o.UserinfoGenderIexact = userinfoGenderIexact
}

// WithUsername adds the username to the users list params
func (o *UsersListParams) WithUsername(username *string) *UsersListParams {
	o.SetUsername(username)
	return o
}

// SetUsername adds the username to the users list params
func (o *UsersListParams) SetUsername(username *string) {
	o.Username = username
}

// WithUserrelativeName adds the userrelativeName to the users list params
func (o *UsersListParams) WithUserrelativeName(userrelativeName *string) *UsersListParams {
	o.SetUserrelativeName(userrelativeName)
	return o
}

// SetUserrelativeName adds the userrelativeName to the users list params
func (o *UsersListParams) SetUserrelativeName(userrelativeName *string) {
	o.UserrelativeName = userrelativeName
}

// WithUserrelativeNameContains adds the userrelativeNameContains to the users list params
func (o *UsersListParams) WithUserrelativeNameContains(userrelativeNameContains *string) *UsersListParams {
	o.SetUserrelativeNameContains(userrelativeNameContains)
	return o
}

// SetUserrelativeNameContains adds the userrelativeNameContains to the users list params
func (o *UsersListParams) SetUserrelativeNameContains(userrelativeNameContains *string) {
	o.UserrelativeNameContains = userrelativeNameContains
}

// WithUserrelativeNameIcontains adds the userrelativeNameIcontains to the users list params
func (o *UsersListParams) WithUserrelativeNameIcontains(userrelativeNameIcontains *string) *UsersListParams {
	o.SetUserrelativeNameIcontains(userrelativeNameIcontains)
	return o
}

// SetUserrelativeNameIcontains adds the userrelativeNameIcontains to the users list params
func (o *UsersListParams) SetUserrelativeNameIcontains(userrelativeNameIcontains *string) {
	o.UserrelativeNameIcontains = userrelativeNameIcontains
}

// WithWorkscheduleLabel adds the workscheduleLabel to the users list params
func (o *UsersListParams) WithWorkscheduleLabel(workscheduleLabel *string) *UsersListParams {
	o.SetWorkscheduleLabel(workscheduleLabel)
	return o
}

// SetWorkscheduleLabel adds the workscheduleLabel to the users list params
func (o *UsersListParams) SetWorkscheduleLabel(workscheduleLabel *string) {
	o.WorkscheduleLabel = workscheduleLabel
}

// WithWorkscheduleLabelContains adds the workscheduleLabelContains to the users list params
func (o *UsersListParams) WithWorkscheduleLabelContains(workscheduleLabelContains *string) *UsersListParams {
	o.SetWorkscheduleLabelContains(workscheduleLabelContains)
	return o
}

// SetWorkscheduleLabelContains adds the workscheduleLabelContains to the users list params
func (o *UsersListParams) SetWorkscheduleLabelContains(workscheduleLabelContains *string) {
	o.WorkscheduleLabelContains = workscheduleLabelContains
}

// WithWorkscheduleLabelIcontains adds the workscheduleLabelIcontains to the users list params
func (o *UsersListParams) WithWorkscheduleLabelIcontains(workscheduleLabelIcontains *string) *UsersListParams {
	o.SetWorkscheduleLabelIcontains(workscheduleLabelIcontains)
	return o
}

// SetWorkscheduleLabelIcontains adds the workscheduleLabelIcontains to the users list params
func (o *UsersListParams) SetWorkscheduleLabelIcontains(workscheduleLabelIcontains *string) {
	o.WorkscheduleLabelIcontains = workscheduleLabelIcontains
}

// WriteToRequest writes these params to a swagger request
func (o *UsersListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ActiveFriday != nil {

		// query param active_friday
		var qrActiveFriday string
		if o.ActiveFriday != nil {
			qrActiveFriday = *o.ActiveFriday
		}
		qActiveFriday := qrActiveFriday
		if qActiveFriday != "" {
			if err := r.SetQueryParam("active_friday", qActiveFriday); err != nil {
				return err
			}
		}

	}

	if o.ActiveMonday != nil {

		// query param active_monday
		var qrActiveMonday string
		if o.ActiveMonday != nil {
			qrActiveMonday = *o.ActiveMonday
		}
		qActiveMonday := qrActiveMonday
		if qActiveMonday != "" {
			if err := r.SetQueryParam("active_monday", qActiveMonday); err != nil {
				return err
			}
		}

	}

	if o.ActiveSaturday != nil {

		// query param active_saturday
		var qrActiveSaturday string
		if o.ActiveSaturday != nil {
			qrActiveSaturday = *o.ActiveSaturday
		}
		qActiveSaturday := qrActiveSaturday
		if qActiveSaturday != "" {
			if err := r.SetQueryParam("active_saturday", qActiveSaturday); err != nil {
				return err
			}
		}

	}

	if o.ActiveSunday != nil {

		// query param active_sunday
		var qrActiveSunday string
		if o.ActiveSunday != nil {
			qrActiveSunday = *o.ActiveSunday
		}
		qActiveSunday := qrActiveSunday
		if qActiveSunday != "" {
			if err := r.SetQueryParam("active_sunday", qActiveSunday); err != nil {
				return err
			}
		}

	}

	if o.ActiveThursday != nil {

		// query param active_thursday
		var qrActiveThursday string
		if o.ActiveThursday != nil {
			qrActiveThursday = *o.ActiveThursday
		}
		qActiveThursday := qrActiveThursday
		if qActiveThursday != "" {
			if err := r.SetQueryParam("active_thursday", qActiveThursday); err != nil {
				return err
			}
		}

	}

	if o.ActiveTuesday != nil {

		// query param active_tuesday
		var qrActiveTuesday string
		if o.ActiveTuesday != nil {
			qrActiveTuesday = *o.ActiveTuesday
		}
		qActiveTuesday := qrActiveTuesday
		if qActiveTuesday != "" {
			if err := r.SetQueryParam("active_tuesday", qActiveTuesday); err != nil {
				return err
			}
		}

	}

	if o.ActiveWednesday != nil {

		// query param active_wednesday
		var qrActiveWednesday string
		if o.ActiveWednesday != nil {
			qrActiveWednesday = *o.ActiveWednesday
		}
		qActiveWednesday := qrActiveWednesday
		if qActiveWednesday != "" {
			if err := r.SetQueryParam("active_wednesday", qActiveWednesday); err != nil {
				return err
			}
		}

	}

	if o.Email != nil {

		// query param email
		var qrEmail string
		if o.Email != nil {
			qrEmail = *o.Email
		}
		qEmail := qrEmail
		if qEmail != "" {
			if err := r.SetQueryParam("email", qEmail); err != nil {
				return err
			}
		}

	}

	if o.EmploymentcontractCompanyName != nil {

		// query param employmentcontract__company__name
		var qrEmploymentcontractCompanyName string
		if o.EmploymentcontractCompanyName != nil {
			qrEmploymentcontractCompanyName = *o.EmploymentcontractCompanyName
		}
		qEmploymentcontractCompanyName := qrEmploymentcontractCompanyName
		if qEmploymentcontractCompanyName != "" {
			if err := r.SetQueryParam("employmentcontract__company__name", qEmploymentcontractCompanyName); err != nil {
				return err
			}
		}

	}

	if o.EmploymentcontractCompanyNameContains != nil {

		// query param employmentcontract__company__name__contains
		var qrEmploymentcontractCompanyNameContains string
		if o.EmploymentcontractCompanyNameContains != nil {
			qrEmploymentcontractCompanyNameContains = *o.EmploymentcontractCompanyNameContains
		}
		qEmploymentcontractCompanyNameContains := qrEmploymentcontractCompanyNameContains
		if qEmploymentcontractCompanyNameContains != "" {
			if err := r.SetQueryParam("employmentcontract__company__name__contains", qEmploymentcontractCompanyNameContains); err != nil {
				return err
			}
		}

	}

	if o.EmploymentcontractCompanyNameIcontains != nil {

		// query param employmentcontract__company__name__icontains
		var qrEmploymentcontractCompanyNameIcontains string
		if o.EmploymentcontractCompanyNameIcontains != nil {
			qrEmploymentcontractCompanyNameIcontains = *o.EmploymentcontractCompanyNameIcontains
		}
		qEmploymentcontractCompanyNameIcontains := qrEmploymentcontractCompanyNameIcontains
		if qEmploymentcontractCompanyNameIcontains != "" {
			if err := r.SetQueryParam("employmentcontract__company__name__icontains", qEmploymentcontractCompanyNameIcontains); err != nil {
				return err
			}
		}

	}

	if o.EmploymentcontractEndedAt != nil {

		// query param employmentcontract__ended_at
		var qrEmploymentcontractEndedAt string
		if o.EmploymentcontractEndedAt != nil {
			qrEmploymentcontractEndedAt = *o.EmploymentcontractEndedAt
		}
		qEmploymentcontractEndedAt := qrEmploymentcontractEndedAt
		if qEmploymentcontractEndedAt != "" {
			if err := r.SetQueryParam("employmentcontract__ended_at", qEmploymentcontractEndedAt); err != nil {
				return err
			}
		}

	}

	if o.EmploymentcontractEndedAtYearGt != nil {

		// query param employmentcontract__ended_at__year__gt
		var qrEmploymentcontractEndedAtYearGt string
		if o.EmploymentcontractEndedAtYearGt != nil {
			qrEmploymentcontractEndedAtYearGt = *o.EmploymentcontractEndedAtYearGt
		}
		qEmploymentcontractEndedAtYearGt := qrEmploymentcontractEndedAtYearGt
		if qEmploymentcontractEndedAtYearGt != "" {
			if err := r.SetQueryParam("employmentcontract__ended_at__year__gt", qEmploymentcontractEndedAtYearGt); err != nil {
				return err
			}
		}

	}

	if o.EmploymentcontractEndedAtYearGte != nil {

		// query param employmentcontract__ended_at__year__gte
		var qrEmploymentcontractEndedAtYearGte string
		if o.EmploymentcontractEndedAtYearGte != nil {
			qrEmploymentcontractEndedAtYearGte = *o.EmploymentcontractEndedAtYearGte
		}
		qEmploymentcontractEndedAtYearGte := qrEmploymentcontractEndedAtYearGte
		if qEmploymentcontractEndedAtYearGte != "" {
			if err := r.SetQueryParam("employmentcontract__ended_at__year__gte", qEmploymentcontractEndedAtYearGte); err != nil {
				return err
			}
		}

	}

	if o.EmploymentcontractEndedAtYearLt != nil {

		// query param employmentcontract__ended_at__year__lt
		var qrEmploymentcontractEndedAtYearLt string
		if o.EmploymentcontractEndedAtYearLt != nil {
			qrEmploymentcontractEndedAtYearLt = *o.EmploymentcontractEndedAtYearLt
		}
		qEmploymentcontractEndedAtYearLt := qrEmploymentcontractEndedAtYearLt
		if qEmploymentcontractEndedAtYearLt != "" {
			if err := r.SetQueryParam("employmentcontract__ended_at__year__lt", qEmploymentcontractEndedAtYearLt); err != nil {
				return err
			}
		}

	}

	if o.EmploymentcontractEndedAtYearLte != nil {

		// query param employmentcontract__ended_at__year__lte
		var qrEmploymentcontractEndedAtYearLte string
		if o.EmploymentcontractEndedAtYearLte != nil {
			qrEmploymentcontractEndedAtYearLte = *o.EmploymentcontractEndedAtYearLte
		}
		qEmploymentcontractEndedAtYearLte := qrEmploymentcontractEndedAtYearLte
		if qEmploymentcontractEndedAtYearLte != "" {
			if err := r.SetQueryParam("employmentcontract__ended_at__year__lte", qEmploymentcontractEndedAtYearLte); err != nil {
				return err
			}
		}

	}

	if o.EmploymentcontractStartedAt != nil {

		// query param employmentcontract__started_at
		var qrEmploymentcontractStartedAt string
		if o.EmploymentcontractStartedAt != nil {
			qrEmploymentcontractStartedAt = *o.EmploymentcontractStartedAt
		}
		qEmploymentcontractStartedAt := qrEmploymentcontractStartedAt
		if qEmploymentcontractStartedAt != "" {
			if err := r.SetQueryParam("employmentcontract__started_at", qEmploymentcontractStartedAt); err != nil {
				return err
			}
		}

	}

	if o.EmploymentcontractStartedAtYearGt != nil {

		// query param employmentcontract__started_at__year__gt
		var qrEmploymentcontractStartedAtYearGt string
		if o.EmploymentcontractStartedAtYearGt != nil {
			qrEmploymentcontractStartedAtYearGt = *o.EmploymentcontractStartedAtYearGt
		}
		qEmploymentcontractStartedAtYearGt := qrEmploymentcontractStartedAtYearGt
		if qEmploymentcontractStartedAtYearGt != "" {
			if err := r.SetQueryParam("employmentcontract__started_at__year__gt", qEmploymentcontractStartedAtYearGt); err != nil {
				return err
			}
		}

	}

	if o.EmploymentcontractStartedAtYearGte != nil {

		// query param employmentcontract__started_at__year__gte
		var qrEmploymentcontractStartedAtYearGte string
		if o.EmploymentcontractStartedAtYearGte != nil {
			qrEmploymentcontractStartedAtYearGte = *o.EmploymentcontractStartedAtYearGte
		}
		qEmploymentcontractStartedAtYearGte := qrEmploymentcontractStartedAtYearGte
		if qEmploymentcontractStartedAtYearGte != "" {
			if err := r.SetQueryParam("employmentcontract__started_at__year__gte", qEmploymentcontractStartedAtYearGte); err != nil {
				return err
			}
		}

	}

	if o.EmploymentcontractStartedAtYearLt != nil {

		// query param employmentcontract__started_at__year__lt
		var qrEmploymentcontractStartedAtYearLt string
		if o.EmploymentcontractStartedAtYearLt != nil {
			qrEmploymentcontractStartedAtYearLt = *o.EmploymentcontractStartedAtYearLt
		}
		qEmploymentcontractStartedAtYearLt := qrEmploymentcontractStartedAtYearLt
		if qEmploymentcontractStartedAtYearLt != "" {
			if err := r.SetQueryParam("employmentcontract__started_at__year__lt", qEmploymentcontractStartedAtYearLt); err != nil {
				return err
			}
		}

	}

	if o.EmploymentcontractStartedAtYearLte != nil {

		// query param employmentcontract__started_at__year__lte
		var qrEmploymentcontractStartedAtYearLte string
		if o.EmploymentcontractStartedAtYearLte != nil {
			qrEmploymentcontractStartedAtYearLte = *o.EmploymentcontractStartedAtYearLte
		}
		qEmploymentcontractStartedAtYearLte := qrEmploymentcontractStartedAtYearLte
		if qEmploymentcontractStartedAtYearLte != "" {
			if err := r.SetQueryParam("employmentcontract__started_at__year__lte", qEmploymentcontractStartedAtYearLte); err != nil {
				return err
			}
		}

	}

	if o.EmploymentcontractType != nil {

		// query param employmentcontract_type
		var qrEmploymentcontractType string
		if o.EmploymentcontractType != nil {
			qrEmploymentcontractType = *o.EmploymentcontractType
		}
		qEmploymentcontractType := qrEmploymentcontractType
		if qEmploymentcontractType != "" {
			if err := r.SetQueryParam("employmentcontract_type", qEmploymentcontractType); err != nil {
				return err
			}
		}

	}

	if o.FirstName != nil {

		// query param first_name
		var qrFirstName string
		if o.FirstName != nil {
			qrFirstName = *o.FirstName
		}
		qFirstName := qrFirstName
		if qFirstName != "" {
			if err := r.SetQueryParam("first_name", qFirstName); err != nil {
				return err
			}
		}

	}

	if o.FirstNameContains != nil {

		// query param first_name__contains
		var qrFirstNameContains string
		if o.FirstNameContains != nil {
			qrFirstNameContains = *o.FirstNameContains
		}
		qFirstNameContains := qrFirstNameContains
		if qFirstNameContains != "" {
			if err := r.SetQueryParam("first_name__contains", qFirstNameContains); err != nil {
				return err
			}
		}

	}

	if o.FirstNameIcontains != nil {

		// query param first_name__icontains
		var qrFirstNameIcontains string
		if o.FirstNameIcontains != nil {
			qrFirstNameIcontains = *o.FirstNameIcontains
		}
		qFirstNameIcontains := qrFirstNameIcontains
		if qFirstNameIcontains != "" {
			if err := r.SetQueryParam("first_name__icontains", qFirstNameIcontains); err != nil {
				return err
			}
		}

	}

	if o.Groups != nil {

		// query param groups
		var qrGroups string
		if o.Groups != nil {
			qrGroups = *o.Groups
		}
		qGroups := qrGroups
		if qGroups != "" {
			if err := r.SetQueryParam("groups", qGroups); err != nil {
				return err
			}
		}

	}

	if o.GroupsContains != nil {

		// query param groups__contains
		var qrGroupsContains string
		if o.GroupsContains != nil {
			qrGroupsContains = *o.GroupsContains
		}
		qGroupsContains := qrGroupsContains
		if qGroupsContains != "" {
			if err := r.SetQueryParam("groups__contains", qGroupsContains); err != nil {
				return err
			}
		}

	}

	if o.GroupsIcontains != nil {

		// query param groups__icontains
		var qrGroupsIcontains string
		if o.GroupsIcontains != nil {
			qrGroupsIcontains = *o.GroupsIcontains
		}
		qGroupsIcontains := qrGroupsIcontains
		if qGroupsIcontains != "" {
			if err := r.SetQueryParam("groups__icontains", qGroupsIcontains); err != nil {
				return err
			}
		}

	}

	if o.IsActive != nil {

		// query param is_active
		var qrIsActive string
		if o.IsActive != nil {
			qrIsActive = *o.IsActive
		}
		qIsActive := qrIsActive
		if qIsActive != "" {
			if err := r.SetQueryParam("is_active", qIsActive); err != nil {
				return err
			}
		}

	}

	if o.LastName != nil {

		// query param last_name
		var qrLastName string
		if o.LastName != nil {
			qrLastName = *o.LastName
		}
		qLastName := qrLastName
		if qLastName != "" {
			if err := r.SetQueryParam("last_name", qLastName); err != nil {
				return err
			}
		}

	}

	if o.LastNameContains != nil {

		// query param last_name__contains
		var qrLastNameContains string
		if o.LastNameContains != nil {
			qrLastNameContains = *o.LastNameContains
		}
		qLastNameContains := qrLastNameContains
		if qLastNameContains != "" {
			if err := r.SetQueryParam("last_name__contains", qLastNameContains); err != nil {
				return err
			}
		}

	}

	if o.LastNameIcontains != nil {

		// query param last_name__icontains
		var qrLastNameIcontains string
		if o.LastNameIcontains != nil {
			qrLastNameIcontains = *o.LastNameIcontains
		}
		qLastNameIcontains := qrLastNameIcontains
		if qLastNameIcontains != "" {
			if err := r.SetQueryParam("last_name__icontains", qLastNameIcontains); err != nil {
				return err
			}
		}

	}

	if o.LeaveLeavedateEndsAtGte != nil {

		// query param leave__leavedate__ends_at__gte
		var qrLeaveLeavedateEndsAtGte string
		if o.LeaveLeavedateEndsAtGte != nil {
			qrLeaveLeavedateEndsAtGte = *o.LeaveLeavedateEndsAtGte
		}
		qLeaveLeavedateEndsAtGte := qrLeaveLeavedateEndsAtGte
		if qLeaveLeavedateEndsAtGte != "" {
			if err := r.SetQueryParam("leave__leavedate__ends_at__gte", qLeaveLeavedateEndsAtGte); err != nil {
				return err
			}
		}

	}

	if o.LeaveLeavedateStartsAtLte != nil {

		// query param leave__leavedate__starts_at__lte
		var qrLeaveLeavedateStartsAtLte string
		if o.LeaveLeavedateStartsAtLte != nil {
			qrLeaveLeavedateStartsAtLte = *o.LeaveLeavedateStartsAtLte
		}
		qLeaveLeavedateStartsAtLte := qrLeaveLeavedateStartsAtLte
		if qLeaveLeavedateStartsAtLte != "" {
			if err := r.SetQueryParam("leave__leavedate__starts_at__lte", qLeaveLeavedateStartsAtLte); err != nil {
				return err
			}
		}

	}

	if o.OrderBy != nil {

		// query param order_by
		var qrOrderBy string
		if o.OrderBy != nil {
			qrOrderBy = *o.OrderBy
		}
		qOrderBy := qrOrderBy
		if qOrderBy != "" {
			if err := r.SetQueryParam("order_by", qOrderBy); err != nil {
				return err
			}
		}

	}

	if o.Page != nil {

		// query param page
		var qrPage string
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := qrPage
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if o.PageSize != nil {

		// query param page_size
		var qrPageSize string
		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := qrPageSize
		if qPageSize != "" {
			if err := r.SetQueryParam("page_size", qPageSize); err != nil {
				return err
			}
		}

	}

	if o.UserinfoBirthDate != nil {

		// query param userinfo__birth_date
		var qrUserinfoBirthDate string
		if o.UserinfoBirthDate != nil {
			qrUserinfoBirthDate = *o.UserinfoBirthDate
		}
		qUserinfoBirthDate := qrUserinfoBirthDate
		if qUserinfoBirthDate != "" {
			if err := r.SetQueryParam("userinfo__birth_date", qUserinfoBirthDate); err != nil {
				return err
			}
		}

	}

	if o.UserinfoBirthDateYearGt != nil {

		// query param userinfo__birth_date__year__gt
		var qrUserinfoBirthDateYearGt string
		if o.UserinfoBirthDateYearGt != nil {
			qrUserinfoBirthDateYearGt = *o.UserinfoBirthDateYearGt
		}
		qUserinfoBirthDateYearGt := qrUserinfoBirthDateYearGt
		if qUserinfoBirthDateYearGt != "" {
			if err := r.SetQueryParam("userinfo__birth_date__year__gt", qUserinfoBirthDateYearGt); err != nil {
				return err
			}
		}

	}

	if o.UserinfoBirthDateYearGte != nil {

		// query param userinfo__birth_date__year__gte
		var qrUserinfoBirthDateYearGte string
		if o.UserinfoBirthDateYearGte != nil {
			qrUserinfoBirthDateYearGte = *o.UserinfoBirthDateYearGte
		}
		qUserinfoBirthDateYearGte := qrUserinfoBirthDateYearGte
		if qUserinfoBirthDateYearGte != "" {
			if err := r.SetQueryParam("userinfo__birth_date__year__gte", qUserinfoBirthDateYearGte); err != nil {
				return err
			}
		}

	}

	if o.UserinfoBirthDateYearLt != nil {

		// query param userinfo__birth_date__year__lt
		var qrUserinfoBirthDateYearLt string
		if o.UserinfoBirthDateYearLt != nil {
			qrUserinfoBirthDateYearLt = *o.UserinfoBirthDateYearLt
		}
		qUserinfoBirthDateYearLt := qrUserinfoBirthDateYearLt
		if qUserinfoBirthDateYearLt != "" {
			if err := r.SetQueryParam("userinfo__birth_date__year__lt", qUserinfoBirthDateYearLt); err != nil {
				return err
			}
		}

	}

	if o.UserinfoBirthDateYearLte != nil {

		// query param userinfo__birth_date__year__lte
		var qrUserinfoBirthDateYearLte string
		if o.UserinfoBirthDateYearLte != nil {
			qrUserinfoBirthDateYearLte = *o.UserinfoBirthDateYearLte
		}
		qUserinfoBirthDateYearLte := qrUserinfoBirthDateYearLte
		if qUserinfoBirthDateYearLte != "" {
			if err := r.SetQueryParam("userinfo__birth_date__year__lte", qUserinfoBirthDateYearLte); err != nil {
				return err
			}
		}

	}

	if o.UserinfoCountryIexact != nil {

		// query param userinfo__country__iexact
		var qrUserinfoCountryIexact string
		if o.UserinfoCountryIexact != nil {
			qrUserinfoCountryIexact = *o.UserinfoCountryIexact
		}
		qUserinfoCountryIexact := qrUserinfoCountryIexact
		if qUserinfoCountryIexact != "" {
			if err := r.SetQueryParam("userinfo__country__iexact", qUserinfoCountryIexact); err != nil {
				return err
			}
		}

	}

	if o.UserinfoGenderIexact != nil {

		// query param userinfo__gender__iexact
		var qrUserinfoGenderIexact string
		if o.UserinfoGenderIexact != nil {
			qrUserinfoGenderIexact = *o.UserinfoGenderIexact
		}
		qUserinfoGenderIexact := qrUserinfoGenderIexact
		if qUserinfoGenderIexact != "" {
			if err := r.SetQueryParam("userinfo__gender__iexact", qUserinfoGenderIexact); err != nil {
				return err
			}
		}

	}

	if o.Username != nil {

		// query param username
		var qrUsername string
		if o.Username != nil {
			qrUsername = *o.Username
		}
		qUsername := qrUsername
		if qUsername != "" {
			if err := r.SetQueryParam("username", qUsername); err != nil {
				return err
			}
		}

	}

	if o.UserrelativeName != nil {

		// query param userrelative__name
		var qrUserrelativeName string
		if o.UserrelativeName != nil {
			qrUserrelativeName = *o.UserrelativeName
		}
		qUserrelativeName := qrUserrelativeName
		if qUserrelativeName != "" {
			if err := r.SetQueryParam("userrelative__name", qUserrelativeName); err != nil {
				return err
			}
		}

	}

	if o.UserrelativeNameContains != nil {

		// query param userrelative__name__contains
		var qrUserrelativeNameContains string
		if o.UserrelativeNameContains != nil {
			qrUserrelativeNameContains = *o.UserrelativeNameContains
		}
		qUserrelativeNameContains := qrUserrelativeNameContains
		if qUserrelativeNameContains != "" {
			if err := r.SetQueryParam("userrelative__name__contains", qUserrelativeNameContains); err != nil {
				return err
			}
		}

	}

	if o.UserrelativeNameIcontains != nil {

		// query param userrelative__name__icontains
		var qrUserrelativeNameIcontains string
		if o.UserrelativeNameIcontains != nil {
			qrUserrelativeNameIcontains = *o.UserrelativeNameIcontains
		}
		qUserrelativeNameIcontains := qrUserrelativeNameIcontains
		if qUserrelativeNameIcontains != "" {
			if err := r.SetQueryParam("userrelative__name__icontains", qUserrelativeNameIcontains); err != nil {
				return err
			}
		}

	}

	if o.WorkscheduleLabel != nil {

		// query param workschedule_label
		var qrWorkscheduleLabel string
		if o.WorkscheduleLabel != nil {
			qrWorkscheduleLabel = *o.WorkscheduleLabel
		}
		qWorkscheduleLabel := qrWorkscheduleLabel
		if qWorkscheduleLabel != "" {
			if err := r.SetQueryParam("workschedule_label", qWorkscheduleLabel); err != nil {
				return err
			}
		}

	}

	if o.WorkscheduleLabelContains != nil {

		// query param workschedule_label__contains
		var qrWorkscheduleLabelContains string
		if o.WorkscheduleLabelContains != nil {
			qrWorkscheduleLabelContains = *o.WorkscheduleLabelContains
		}
		qWorkscheduleLabelContains := qrWorkscheduleLabelContains
		if qWorkscheduleLabelContains != "" {
			if err := r.SetQueryParam("workschedule_label__contains", qWorkscheduleLabelContains); err != nil {
				return err
			}
		}

	}

	if o.WorkscheduleLabelIcontains != nil {

		// query param workschedule_label__icontains
		var qrWorkscheduleLabelIcontains string
		if o.WorkscheduleLabelIcontains != nil {
			qrWorkscheduleLabelIcontains = *o.WorkscheduleLabelIcontains
		}
		qWorkscheduleLabelIcontains := qrWorkscheduleLabelIcontains
		if qWorkscheduleLabelIcontains != "" {
			if err := r.SetQueryParam("workschedule_label__icontains", qWorkscheduleLabelIcontains); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

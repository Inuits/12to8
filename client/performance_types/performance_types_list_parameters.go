// Code generated by go-swagger; DO NOT EDIT.

package performance_types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPerformanceTypesListParams creates a new PerformanceTypesListParams object
// with the default values initialized.
func NewPerformanceTypesListParams() *PerformanceTypesListParams {
	var ()
	return &PerformanceTypesListParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPerformanceTypesListParamsWithTimeout creates a new PerformanceTypesListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPerformanceTypesListParamsWithTimeout(timeout time.Duration) *PerformanceTypesListParams {
	var ()
	return &PerformanceTypesListParams{

		timeout: timeout,
	}
}

// NewPerformanceTypesListParamsWithContext creates a new PerformanceTypesListParams object
// with the default values initialized, and the ability to set a context for a request
func NewPerformanceTypesListParamsWithContext(ctx context.Context) *PerformanceTypesListParams {
	var ()
	return &PerformanceTypesListParams{

		Context: ctx,
	}
}

// NewPerformanceTypesListParamsWithHTTPClient creates a new PerformanceTypesListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPerformanceTypesListParamsWithHTTPClient(client *http.Client) *PerformanceTypesListParams {
	var ()
	return &PerformanceTypesListParams{
		HTTPClient: client,
	}
}

/*PerformanceTypesListParams contains all the parameters to send to the API endpoint
for the performance types list operation typically these are written to a http.Request
*/
type PerformanceTypesListParams struct {

	/*Description*/
	Description *string
	/*DescriptionContains*/
	DescriptionContains *string
	/*DescriptionIcontains*/
	DescriptionIcontains *string
	/*Label*/
	Label *string
	/*LabelContains*/
	LabelContains *string
	/*LabelIcontains*/
	LabelIcontains *string
	/*Multiplier*/
	Multiplier *string
	/*MultiplierGt*/
	MultiplierGt *string
	/*MultiplierGte*/
	MultiplierGte *string
	/*MultiplierLt*/
	MultiplierLt *string
	/*MultiplierLte*/
	MultiplierLte *string
	/*OrderBy*/
	OrderBy *string
	/*Page*/
	Page *string
	/*PageSize*/
	PageSize *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the performance types list params
func (o *PerformanceTypesListParams) WithTimeout(timeout time.Duration) *PerformanceTypesListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the performance types list params
func (o *PerformanceTypesListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the performance types list params
func (o *PerformanceTypesListParams) WithContext(ctx context.Context) *PerformanceTypesListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the performance types list params
func (o *PerformanceTypesListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the performance types list params
func (o *PerformanceTypesListParams) WithHTTPClient(client *http.Client) *PerformanceTypesListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the performance types list params
func (o *PerformanceTypesListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDescription adds the description to the performance types list params
func (o *PerformanceTypesListParams) WithDescription(description *string) *PerformanceTypesListParams {
	o.SetDescription(description)
	return o
}

// SetDescription adds the description to the performance types list params
func (o *PerformanceTypesListParams) SetDescription(description *string) {
	o.Description = description
}

// WithDescriptionContains adds the descriptionContains to the performance types list params
func (o *PerformanceTypesListParams) WithDescriptionContains(descriptionContains *string) *PerformanceTypesListParams {
	o.SetDescriptionContains(descriptionContains)
	return o
}

// SetDescriptionContains adds the descriptionContains to the performance types list params
func (o *PerformanceTypesListParams) SetDescriptionContains(descriptionContains *string) {
	o.DescriptionContains = descriptionContains
}

// WithDescriptionIcontains adds the descriptionIcontains to the performance types list params
func (o *PerformanceTypesListParams) WithDescriptionIcontains(descriptionIcontains *string) *PerformanceTypesListParams {
	o.SetDescriptionIcontains(descriptionIcontains)
	return o
}

// SetDescriptionIcontains adds the descriptionIcontains to the performance types list params
func (o *PerformanceTypesListParams) SetDescriptionIcontains(descriptionIcontains *string) {
	o.DescriptionIcontains = descriptionIcontains
}

// WithLabel adds the label to the performance types list params
func (o *PerformanceTypesListParams) WithLabel(label *string) *PerformanceTypesListParams {
	o.SetLabel(label)
	return o
}

// SetLabel adds the label to the performance types list params
func (o *PerformanceTypesListParams) SetLabel(label *string) {
	o.Label = label
}

// WithLabelContains adds the labelContains to the performance types list params
func (o *PerformanceTypesListParams) WithLabelContains(labelContains *string) *PerformanceTypesListParams {
	o.SetLabelContains(labelContains)
	return o
}

// SetLabelContains adds the labelContains to the performance types list params
func (o *PerformanceTypesListParams) SetLabelContains(labelContains *string) {
	o.LabelContains = labelContains
}

// WithLabelIcontains adds the labelIcontains to the performance types list params
func (o *PerformanceTypesListParams) WithLabelIcontains(labelIcontains *string) *PerformanceTypesListParams {
	o.SetLabelIcontains(labelIcontains)
	return o
}

// SetLabelIcontains adds the labelIcontains to the performance types list params
func (o *PerformanceTypesListParams) SetLabelIcontains(labelIcontains *string) {
	o.LabelIcontains = labelIcontains
}

// WithMultiplier adds the multiplier to the performance types list params
func (o *PerformanceTypesListParams) WithMultiplier(multiplier *string) *PerformanceTypesListParams {
	o.SetMultiplier(multiplier)
	return o
}

// SetMultiplier adds the multiplier to the performance types list params
func (o *PerformanceTypesListParams) SetMultiplier(multiplier *string) {
	o.Multiplier = multiplier
}

// WithMultiplierGt adds the multiplierGt to the performance types list params
func (o *PerformanceTypesListParams) WithMultiplierGt(multiplierGt *string) *PerformanceTypesListParams {
	o.SetMultiplierGt(multiplierGt)
	return o
}

// SetMultiplierGt adds the multiplierGt to the performance types list params
func (o *PerformanceTypesListParams) SetMultiplierGt(multiplierGt *string) {
	o.MultiplierGt = multiplierGt
}

// WithMultiplierGte adds the multiplierGte to the performance types list params
func (o *PerformanceTypesListParams) WithMultiplierGte(multiplierGte *string) *PerformanceTypesListParams {
	o.SetMultiplierGte(multiplierGte)
	return o
}

// SetMultiplierGte adds the multiplierGte to the performance types list params
func (o *PerformanceTypesListParams) SetMultiplierGte(multiplierGte *string) {
	o.MultiplierGte = multiplierGte
}

// WithMultiplierLt adds the multiplierLt to the performance types list params
func (o *PerformanceTypesListParams) WithMultiplierLt(multiplierLt *string) *PerformanceTypesListParams {
	o.SetMultiplierLt(multiplierLt)
	return o
}

// SetMultiplierLt adds the multiplierLt to the performance types list params
func (o *PerformanceTypesListParams) SetMultiplierLt(multiplierLt *string) {
	o.MultiplierLt = multiplierLt
}

// WithMultiplierLte adds the multiplierLte to the performance types list params
func (o *PerformanceTypesListParams) WithMultiplierLte(multiplierLte *string) *PerformanceTypesListParams {
	o.SetMultiplierLte(multiplierLte)
	return o
}

// SetMultiplierLte adds the multiplierLte to the performance types list params
func (o *PerformanceTypesListParams) SetMultiplierLte(multiplierLte *string) {
	o.MultiplierLte = multiplierLte
}

// WithOrderBy adds the orderBy to the performance types list params
func (o *PerformanceTypesListParams) WithOrderBy(orderBy *string) *PerformanceTypesListParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the performance types list params
func (o *PerformanceTypesListParams) SetOrderBy(orderBy *string) {
	o.OrderBy = orderBy
}

// WithPage adds the page to the performance types list params
func (o *PerformanceTypesListParams) WithPage(page *string) *PerformanceTypesListParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the performance types list params
func (o *PerformanceTypesListParams) SetPage(page *string) {
	o.Page = page
}

// WithPageSize adds the pageSize to the performance types list params
func (o *PerformanceTypesListParams) WithPageSize(pageSize *string) *PerformanceTypesListParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the performance types list params
func (o *PerformanceTypesListParams) SetPageSize(pageSize *string) {
	o.PageSize = pageSize
}

// WriteToRequest writes these params to a swagger request
func (o *PerformanceTypesListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Description != nil {

		// query param description
		var qrDescription string
		if o.Description != nil {
			qrDescription = *o.Description
		}
		qDescription := qrDescription
		if qDescription != "" {
			if err := r.SetQueryParam("description", qDescription); err != nil {
				return err
			}
		}

	}

	if o.DescriptionContains != nil {

		// query param description__contains
		var qrDescriptionContains string
		if o.DescriptionContains != nil {
			qrDescriptionContains = *o.DescriptionContains
		}
		qDescriptionContains := qrDescriptionContains
		if qDescriptionContains != "" {
			if err := r.SetQueryParam("description__contains", qDescriptionContains); err != nil {
				return err
			}
		}

	}

	if o.DescriptionIcontains != nil {

		// query param description__icontains
		var qrDescriptionIcontains string
		if o.DescriptionIcontains != nil {
			qrDescriptionIcontains = *o.DescriptionIcontains
		}
		qDescriptionIcontains := qrDescriptionIcontains
		if qDescriptionIcontains != "" {
			if err := r.SetQueryParam("description__icontains", qDescriptionIcontains); err != nil {
				return err
			}
		}

	}

	if o.Label != nil {

		// query param label
		var qrLabel string
		if o.Label != nil {
			qrLabel = *o.Label
		}
		qLabel := qrLabel
		if qLabel != "" {
			if err := r.SetQueryParam("label", qLabel); err != nil {
				return err
			}
		}

	}

	if o.LabelContains != nil {

		// query param label__contains
		var qrLabelContains string
		if o.LabelContains != nil {
			qrLabelContains = *o.LabelContains
		}
		qLabelContains := qrLabelContains
		if qLabelContains != "" {
			if err := r.SetQueryParam("label__contains", qLabelContains); err != nil {
				return err
			}
		}

	}

	if o.LabelIcontains != nil {

		// query param label__icontains
		var qrLabelIcontains string
		if o.LabelIcontains != nil {
			qrLabelIcontains = *o.LabelIcontains
		}
		qLabelIcontains := qrLabelIcontains
		if qLabelIcontains != "" {
			if err := r.SetQueryParam("label__icontains", qLabelIcontains); err != nil {
				return err
			}
		}

	}

	if o.Multiplier != nil {

		// query param multiplier
		var qrMultiplier string
		if o.Multiplier != nil {
			qrMultiplier = *o.Multiplier
		}
		qMultiplier := qrMultiplier
		if qMultiplier != "" {
			if err := r.SetQueryParam("multiplier", qMultiplier); err != nil {
				return err
			}
		}

	}

	if o.MultiplierGt != nil {

		// query param multiplier__gt
		var qrMultiplierGt string
		if o.MultiplierGt != nil {
			qrMultiplierGt = *o.MultiplierGt
		}
		qMultiplierGt := qrMultiplierGt
		if qMultiplierGt != "" {
			if err := r.SetQueryParam("multiplier__gt", qMultiplierGt); err != nil {
				return err
			}
		}

	}

	if o.MultiplierGte != nil {

		// query param multiplier__gte
		var qrMultiplierGte string
		if o.MultiplierGte != nil {
			qrMultiplierGte = *o.MultiplierGte
		}
		qMultiplierGte := qrMultiplierGte
		if qMultiplierGte != "" {
			if err := r.SetQueryParam("multiplier__gte", qMultiplierGte); err != nil {
				return err
			}
		}

	}

	if o.MultiplierLt != nil {

		// query param multiplier__lt
		var qrMultiplierLt string
		if o.MultiplierLt != nil {
			qrMultiplierLt = *o.MultiplierLt
		}
		qMultiplierLt := qrMultiplierLt
		if qMultiplierLt != "" {
			if err := r.SetQueryParam("multiplier__lt", qMultiplierLt); err != nil {
				return err
			}
		}

	}

	if o.MultiplierLte != nil {

		// query param multiplier__lte
		var qrMultiplierLte string
		if o.MultiplierLte != nil {
			qrMultiplierLte = *o.MultiplierLte
		}
		qMultiplierLte := qrMultiplierLte
		if qMultiplierLte != "" {
			if err := r.SetQueryParam("multiplier__lte", qMultiplierLte); err != nil {
				return err
			}
		}

	}

	if o.OrderBy != nil {

		// query param order_by
		var qrOrderBy string
		if o.OrderBy != nil {
			qrOrderBy = *o.OrderBy
		}
		qOrderBy := qrOrderBy
		if qOrderBy != "" {
			if err := r.SetQueryParam("order_by", qOrderBy); err != nil {
				return err
			}
		}

	}

	if o.Page != nil {

		// query param page
		var qrPage string
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := qrPage
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if o.PageSize != nil {

		// query param page_size
		var qrPageSize string
		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := qrPageSize
		if qPageSize != "" {
			if err := r.SetQueryParam("page_size", qPageSize); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

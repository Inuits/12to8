// Code generated by go-swagger; DO NOT EDIT.

package employment_contracts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewEmploymentContractsListParams creates a new EmploymentContractsListParams object
// with the default values initialized.
func NewEmploymentContractsListParams() *EmploymentContractsListParams {
	var ()
	return &EmploymentContractsListParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewEmploymentContractsListParamsWithTimeout creates a new EmploymentContractsListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewEmploymentContractsListParamsWithTimeout(timeout time.Duration) *EmploymentContractsListParams {
	var ()
	return &EmploymentContractsListParams{

		timeout: timeout,
	}
}

// NewEmploymentContractsListParamsWithContext creates a new EmploymentContractsListParams object
// with the default values initialized, and the ability to set a context for a request
func NewEmploymentContractsListParamsWithContext(ctx context.Context) *EmploymentContractsListParams {
	var ()
	return &EmploymentContractsListParams{

		Context: ctx,
	}
}

// NewEmploymentContractsListParamsWithHTTPClient creates a new EmploymentContractsListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewEmploymentContractsListParamsWithHTTPClient(client *http.Client) *EmploymentContractsListParams {
	var ()
	return &EmploymentContractsListParams{
		HTTPClient: client,
	}
}

/*EmploymentContractsListParams contains all the parameters to send to the API endpoint
for the employment contracts list operation typically these are written to a http.Request
*/
type EmploymentContractsListParams struct {

	/*EndedAt*/
	EndedAt *string
	/*EndedAtGt*/
	EndedAtGt *string
	/*EndedAtGte*/
	EndedAtGte *string
	/*EndedAtLt*/
	EndedAtLt *string
	/*EndedAtLte*/
	EndedAtLte *string
	/*IsActive*/
	IsActive *string
	/*OrderBy*/
	OrderBy *string
	/*Page*/
	Page *string
	/*PageSize*/
	PageSize *string
	/*StartedAt*/
	StartedAt *string
	/*StartedAtGt*/
	StartedAtGt *string
	/*StartedAtGte*/
	StartedAtGte *string
	/*StartedAtLt*/
	StartedAtLt *string
	/*StartedAtLte*/
	StartedAtLte *string
	/*User*/
	User *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the employment contracts list params
func (o *EmploymentContractsListParams) WithTimeout(timeout time.Duration) *EmploymentContractsListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the employment contracts list params
func (o *EmploymentContractsListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the employment contracts list params
func (o *EmploymentContractsListParams) WithContext(ctx context.Context) *EmploymentContractsListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the employment contracts list params
func (o *EmploymentContractsListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the employment contracts list params
func (o *EmploymentContractsListParams) WithHTTPClient(client *http.Client) *EmploymentContractsListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the employment contracts list params
func (o *EmploymentContractsListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEndedAt adds the endedAt to the employment contracts list params
func (o *EmploymentContractsListParams) WithEndedAt(endedAt *string) *EmploymentContractsListParams {
	o.SetEndedAt(endedAt)
	return o
}

// SetEndedAt adds the endedAt to the employment contracts list params
func (o *EmploymentContractsListParams) SetEndedAt(endedAt *string) {
	o.EndedAt = endedAt
}

// WithEndedAtGt adds the endedAtGt to the employment contracts list params
func (o *EmploymentContractsListParams) WithEndedAtGt(endedAtGt *string) *EmploymentContractsListParams {
	o.SetEndedAtGt(endedAtGt)
	return o
}

// SetEndedAtGt adds the endedAtGt to the employment contracts list params
func (o *EmploymentContractsListParams) SetEndedAtGt(endedAtGt *string) {
	o.EndedAtGt = endedAtGt
}

// WithEndedAtGte adds the endedAtGte to the employment contracts list params
func (o *EmploymentContractsListParams) WithEndedAtGte(endedAtGte *string) *EmploymentContractsListParams {
	o.SetEndedAtGte(endedAtGte)
	return o
}

// SetEndedAtGte adds the endedAtGte to the employment contracts list params
func (o *EmploymentContractsListParams) SetEndedAtGte(endedAtGte *string) {
	o.EndedAtGte = endedAtGte
}

// WithEndedAtLt adds the endedAtLt to the employment contracts list params
func (o *EmploymentContractsListParams) WithEndedAtLt(endedAtLt *string) *EmploymentContractsListParams {
	o.SetEndedAtLt(endedAtLt)
	return o
}

// SetEndedAtLt adds the endedAtLt to the employment contracts list params
func (o *EmploymentContractsListParams) SetEndedAtLt(endedAtLt *string) {
	o.EndedAtLt = endedAtLt
}

// WithEndedAtLte adds the endedAtLte to the employment contracts list params
func (o *EmploymentContractsListParams) WithEndedAtLte(endedAtLte *string) *EmploymentContractsListParams {
	o.SetEndedAtLte(endedAtLte)
	return o
}

// SetEndedAtLte adds the endedAtLte to the employment contracts list params
func (o *EmploymentContractsListParams) SetEndedAtLte(endedAtLte *string) {
	o.EndedAtLte = endedAtLte
}

// WithIsActive adds the isActive to the employment contracts list params
func (o *EmploymentContractsListParams) WithIsActive(isActive *string) *EmploymentContractsListParams {
	o.SetIsActive(isActive)
	return o
}

// SetIsActive adds the isActive to the employment contracts list params
func (o *EmploymentContractsListParams) SetIsActive(isActive *string) {
	o.IsActive = isActive
}

// WithOrderBy adds the orderBy to the employment contracts list params
func (o *EmploymentContractsListParams) WithOrderBy(orderBy *string) *EmploymentContractsListParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the employment contracts list params
func (o *EmploymentContractsListParams) SetOrderBy(orderBy *string) {
	o.OrderBy = orderBy
}

// WithPage adds the page to the employment contracts list params
func (o *EmploymentContractsListParams) WithPage(page *string) *EmploymentContractsListParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the employment contracts list params
func (o *EmploymentContractsListParams) SetPage(page *string) {
	o.Page = page
}

// WithPageSize adds the pageSize to the employment contracts list params
func (o *EmploymentContractsListParams) WithPageSize(pageSize *string) *EmploymentContractsListParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the employment contracts list params
func (o *EmploymentContractsListParams) SetPageSize(pageSize *string) {
	o.PageSize = pageSize
}

// WithStartedAt adds the startedAt to the employment contracts list params
func (o *EmploymentContractsListParams) WithStartedAt(startedAt *string) *EmploymentContractsListParams {
	o.SetStartedAt(startedAt)
	return o
}

// SetStartedAt adds the startedAt to the employment contracts list params
func (o *EmploymentContractsListParams) SetStartedAt(startedAt *string) {
	o.StartedAt = startedAt
}

// WithStartedAtGt adds the startedAtGt to the employment contracts list params
func (o *EmploymentContractsListParams) WithStartedAtGt(startedAtGt *string) *EmploymentContractsListParams {
	o.SetStartedAtGt(startedAtGt)
	return o
}

// SetStartedAtGt adds the startedAtGt to the employment contracts list params
func (o *EmploymentContractsListParams) SetStartedAtGt(startedAtGt *string) {
	o.StartedAtGt = startedAtGt
}

// WithStartedAtGte adds the startedAtGte to the employment contracts list params
func (o *EmploymentContractsListParams) WithStartedAtGte(startedAtGte *string) *EmploymentContractsListParams {
	o.SetStartedAtGte(startedAtGte)
	return o
}

// SetStartedAtGte adds the startedAtGte to the employment contracts list params
func (o *EmploymentContractsListParams) SetStartedAtGte(startedAtGte *string) {
	o.StartedAtGte = startedAtGte
}

// WithStartedAtLt adds the startedAtLt to the employment contracts list params
func (o *EmploymentContractsListParams) WithStartedAtLt(startedAtLt *string) *EmploymentContractsListParams {
	o.SetStartedAtLt(startedAtLt)
	return o
}

// SetStartedAtLt adds the startedAtLt to the employment contracts list params
func (o *EmploymentContractsListParams) SetStartedAtLt(startedAtLt *string) {
	o.StartedAtLt = startedAtLt
}

// WithStartedAtLte adds the startedAtLte to the employment contracts list params
func (o *EmploymentContractsListParams) WithStartedAtLte(startedAtLte *string) *EmploymentContractsListParams {
	o.SetStartedAtLte(startedAtLte)
	return o
}

// SetStartedAtLte adds the startedAtLte to the employment contracts list params
func (o *EmploymentContractsListParams) SetStartedAtLte(startedAtLte *string) {
	o.StartedAtLte = startedAtLte
}

// WithUser adds the user to the employment contracts list params
func (o *EmploymentContractsListParams) WithUser(user *string) *EmploymentContractsListParams {
	o.SetUser(user)
	return o
}

// SetUser adds the user to the employment contracts list params
func (o *EmploymentContractsListParams) SetUser(user *string) {
	o.User = user
}

// WriteToRequest writes these params to a swagger request
func (o *EmploymentContractsListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.EndedAt != nil {

		// query param ended_at
		var qrEndedAt string
		if o.EndedAt != nil {
			qrEndedAt = *o.EndedAt
		}
		qEndedAt := qrEndedAt
		if qEndedAt != "" {
			if err := r.SetQueryParam("ended_at", qEndedAt); err != nil {
				return err
			}
		}

	}

	if o.EndedAtGt != nil {

		// query param ended_at__gt
		var qrEndedAtGt string
		if o.EndedAtGt != nil {
			qrEndedAtGt = *o.EndedAtGt
		}
		qEndedAtGt := qrEndedAtGt
		if qEndedAtGt != "" {
			if err := r.SetQueryParam("ended_at__gt", qEndedAtGt); err != nil {
				return err
			}
		}

	}

	if o.EndedAtGte != nil {

		// query param ended_at__gte
		var qrEndedAtGte string
		if o.EndedAtGte != nil {
			qrEndedAtGte = *o.EndedAtGte
		}
		qEndedAtGte := qrEndedAtGte
		if qEndedAtGte != "" {
			if err := r.SetQueryParam("ended_at__gte", qEndedAtGte); err != nil {
				return err
			}
		}

	}

	if o.EndedAtLt != nil {

		// query param ended_at__lt
		var qrEndedAtLt string
		if o.EndedAtLt != nil {
			qrEndedAtLt = *o.EndedAtLt
		}
		qEndedAtLt := qrEndedAtLt
		if qEndedAtLt != "" {
			if err := r.SetQueryParam("ended_at__lt", qEndedAtLt); err != nil {
				return err
			}
		}

	}

	if o.EndedAtLte != nil {

		// query param ended_at__lte
		var qrEndedAtLte string
		if o.EndedAtLte != nil {
			qrEndedAtLte = *o.EndedAtLte
		}
		qEndedAtLte := qrEndedAtLte
		if qEndedAtLte != "" {
			if err := r.SetQueryParam("ended_at__lte", qEndedAtLte); err != nil {
				return err
			}
		}

	}

	if o.IsActive != nil {

		// query param is_active
		var qrIsActive string
		if o.IsActive != nil {
			qrIsActive = *o.IsActive
		}
		qIsActive := qrIsActive
		if qIsActive != "" {
			if err := r.SetQueryParam("is_active", qIsActive); err != nil {
				return err
			}
		}

	}

	if o.OrderBy != nil {

		// query param order_by
		var qrOrderBy string
		if o.OrderBy != nil {
			qrOrderBy = *o.OrderBy
		}
		qOrderBy := qrOrderBy
		if qOrderBy != "" {
			if err := r.SetQueryParam("order_by", qOrderBy); err != nil {
				return err
			}
		}

	}

	if o.Page != nil {

		// query param page
		var qrPage string
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := qrPage
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if o.PageSize != nil {

		// query param page_size
		var qrPageSize string
		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := qrPageSize
		if qPageSize != "" {
			if err := r.SetQueryParam("page_size", qPageSize); err != nil {
				return err
			}
		}

	}

	if o.StartedAt != nil {

		// query param started_at
		var qrStartedAt string
		if o.StartedAt != nil {
			qrStartedAt = *o.StartedAt
		}
		qStartedAt := qrStartedAt
		if qStartedAt != "" {
			if err := r.SetQueryParam("started_at", qStartedAt); err != nil {
				return err
			}
		}

	}

	if o.StartedAtGt != nil {

		// query param started_at__gt
		var qrStartedAtGt string
		if o.StartedAtGt != nil {
			qrStartedAtGt = *o.StartedAtGt
		}
		qStartedAtGt := qrStartedAtGt
		if qStartedAtGt != "" {
			if err := r.SetQueryParam("started_at__gt", qStartedAtGt); err != nil {
				return err
			}
		}

	}

	if o.StartedAtGte != nil {

		// query param started_at__gte
		var qrStartedAtGte string
		if o.StartedAtGte != nil {
			qrStartedAtGte = *o.StartedAtGte
		}
		qStartedAtGte := qrStartedAtGte
		if qStartedAtGte != "" {
			if err := r.SetQueryParam("started_at__gte", qStartedAtGte); err != nil {
				return err
			}
		}

	}

	if o.StartedAtLt != nil {

		// query param started_at__lt
		var qrStartedAtLt string
		if o.StartedAtLt != nil {
			qrStartedAtLt = *o.StartedAtLt
		}
		qStartedAtLt := qrStartedAtLt
		if qStartedAtLt != "" {
			if err := r.SetQueryParam("started_at__lt", qStartedAtLt); err != nil {
				return err
			}
		}

	}

	if o.StartedAtLte != nil {

		// query param started_at__lte
		var qrStartedAtLte string
		if o.StartedAtLte != nil {
			qrStartedAtLte = *o.StartedAtLte
		}
		qStartedAtLte := qrStartedAtLte
		if qStartedAtLte != "" {
			if err := r.SetQueryParam("started_at__lte", qStartedAtLte); err != nil {
				return err
			}
		}

	}

	if o.User != nil {

		// query param user
		var qrUser string
		if o.User != nil {
			qrUser = *o.User
		}
		qUser := qrUser
		if qUser != "" {
			if err := r.SetQueryParam("user", qUser); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

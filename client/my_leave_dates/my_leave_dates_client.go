// Code generated by go-swagger; DO NOT EDIT.

package my_leave_dates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new my leave dates API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for my leave dates API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
MyLeaveDatesCreate APIs endpoint that allows leave dates for the currently authenticated user to be viewed or edited

API endpoint that allows leave dates for the currently authenticated user to be viewed or edited.
*/
func (a *Client) MyLeaveDatesCreate(params *MyLeaveDatesCreateParams, authInfo runtime.ClientAuthInfoWriter) (*MyLeaveDatesCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewMyLeaveDatesCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "my_leave_dates_create",
		Method:             "POST",
		PathPattern:        "/api/v1/my_leave_dates/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &MyLeaveDatesCreateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*MyLeaveDatesCreateCreated), nil

}

/*
MyLeaveDatesDelete APIs endpoint that allows leave dates for the currently authenticated user to be viewed or edited

API endpoint that allows leave dates for the currently authenticated user to be viewed or edited.
*/
func (a *Client) MyLeaveDatesDelete(params *MyLeaveDatesDeleteParams, authInfo runtime.ClientAuthInfoWriter) (*MyLeaveDatesDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewMyLeaveDatesDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "my_leave_dates_delete",
		Method:             "DELETE",
		PathPattern:        "/api/v1/my_leave_dates/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &MyLeaveDatesDeleteReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*MyLeaveDatesDeleteNoContent), nil

}

/*
MyLeaveDatesList APIs endpoint that allows leave dates for the currently authenticated user to be viewed or edited

API endpoint that allows leave dates for the currently authenticated user to be viewed or edited.
*/
func (a *Client) MyLeaveDatesList(params *MyLeaveDatesListParams, authInfo runtime.ClientAuthInfoWriter) (*MyLeaveDatesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewMyLeaveDatesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "my_leave_dates_list",
		Method:             "GET",
		PathPattern:        "/api/v1/my_leave_dates/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &MyLeaveDatesListReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*MyLeaveDatesListOK), nil

}

/*
MyLeaveDatesPartialUpdate APIs endpoint that allows leave dates for the currently authenticated user to be viewed or edited

API endpoint that allows leave dates for the currently authenticated user to be viewed or edited.
*/
func (a *Client) MyLeaveDatesPartialUpdate(params *MyLeaveDatesPartialUpdateParams, authInfo runtime.ClientAuthInfoWriter) (*MyLeaveDatesPartialUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewMyLeaveDatesPartialUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "my_leave_dates_partial_update",
		Method:             "PATCH",
		PathPattern:        "/api/v1/my_leave_dates/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &MyLeaveDatesPartialUpdateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*MyLeaveDatesPartialUpdateOK), nil

}

/*
MyLeaveDatesRead APIs endpoint that allows leave dates for the currently authenticated user to be viewed or edited

API endpoint that allows leave dates for the currently authenticated user to be viewed or edited.
*/
func (a *Client) MyLeaveDatesRead(params *MyLeaveDatesReadParams, authInfo runtime.ClientAuthInfoWriter) (*MyLeaveDatesReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewMyLeaveDatesReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "my_leave_dates_read",
		Method:             "GET",
		PathPattern:        "/api/v1/my_leave_dates/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &MyLeaveDatesReadReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*MyLeaveDatesReadOK), nil

}

/*
MyLeaveDatesUpdate APIs endpoint that allows leave dates for the currently authenticated user to be viewed or edited

API endpoint that allows leave dates for the currently authenticated user to be viewed or edited.
*/
func (a *Client) MyLeaveDatesUpdate(params *MyLeaveDatesUpdateParams, authInfo runtime.ClientAuthInfoWriter) (*MyLeaveDatesUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewMyLeaveDatesUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "my_leave_dates_update",
		Method:             "PUT",
		PathPattern:        "/api/v1/my_leave_dates/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &MyLeaveDatesUpdateReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*MyLeaveDatesUpdateOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
